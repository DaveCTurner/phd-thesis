\chapter[Denotational Semantics]{The Denotational Semantics of Nominal HOPLA}
\label{densem}

\TODO{Intro}

\section{Definitions}

\subsection{Denotational Semantics of Types}

Closed types $\typeP$ denote the corresponding objects $\typeP$ of
$\mathbf{FMCts_\varnothing}$.  \TODO{More detail on the paths in each type.}

\subsection{Denotational Semantics of Environments}

Environments $\Gamma$ (with freshness contraints contained in $s_0$) denote
objects of $\mathbf{FMCts}_{s_0}$ as follows.  \begin{equation}
\label{densem:env} \sem{\envempty} = \typeO \qquad\text{and}\qquad
\sem{\envcombine{\Gamma}{\envvarfresh{x}{\typeP}{s} }} = \sem{\Gamma} \amp
\typeP^{\freshfor s} \end{equation}

To help provide a suggestive notation for the elements of $\sem{\Gamma}$,
environments $\Gamma$ also denote objects of $\mathbf{FMPre}_{s_0}$ as follows.
\begin{equation} \label{densem:envp} \semp{\envempty} = \widehat\typeO
\qquad\text{and}\qquad \semp{\envcombine{\Gamma}{\envvarfresh{x}{\typeP}{s} }} =
\semp{\Gamma} \times \widehat{\typeP}^{\freshfor s}\end{equation} so that
elements of $\semp{\Gamma}$ are tuples of paths satisfying the appropriate
freshness constraints.
%
The transformations $m$ and $\phi^{(s)}$ of \ref{def:m} and \ref{} can be used
to build a monotone map $\langle \mathord{\cdot} \rangle_{\Gamma} :
\semp{\Gamma} \to \widehat{\sem{\Gamma}}$ by recursion on $\Gamma$ by setting
$\langle \mathord{\cdot} \rangle_{()} : \semp{()} \to \widehat{\sem{()}} \cong
\{\varnothing\}$ to be the unique such function, and \begin{equation}
\label{densem:def:angles} \langle \mathord{\cdot}
\rangle_{\envcombine{\Gamma}{\envvarfresh{x}{\typeP}{s} }} \defeq
m_{\sem{\Gamma}, \typeP^{\freshfor s}} \circ \Bigl( \langle \mathord{\cdot}
\rangle_{\Gamma} \times \phi^{(s)}_{\typeP} \Bigr). \end{equation}
%
Therefore \begin{equation} \label{densem:angles} \langle \gamma, p
\rangle_{\envcombine{\Gamma}{\envvarfresh{x}{\typeP}{s} }} = \langle \gamma
\rangle_{\Gamma} \uplus \{x \in p \mid x \freshfor s\}. \end{equation}
%
Where it is unambiguous, write $\langle \cdot \rangle_\Gamma$ as $\langle \cdot
\rangle$.

\TODO{It is always ambiguous to write $\langle \cdot \rangle_\Gamma$ as $\langle
\cdot \rangle$.}


%Given $f : \typefresh{\typeP}{{s}} \to \typefresh{\typePp}{{s'}}$, define $\envsubst{\Gamma}{f}{x} : \sem{\envsubst{\Gamma}{\envvarfresh{x}{\typeP}{{s}}}{x}} \to \sem{\envsubst{\Gamma}{\envvarfresh{x}{\typePp}{{s'}}}{x}}$ as follows.
%\[\begin{array}{ccl}
%\envsubst{()}{f}{x} = \mathbf{1}_{\typeO} &\qquad&
%\envsubst{(\envcombine{\Gamma}{\termvar{x} })}{f}{x} = 
%\envsubst{\Gamma}{f}{x} \mathop{\&} f \\&&
%\envsubst{(\envcombine{\Gamma}{\envvarfresh{y}{\typeQ}{{r}}})}{f}{x} = 
%\envsubst{\Gamma}{f}{x} \mathop{\&} \mathbf{1}_{\typefresh{\typeQ}{{r}}}
%\end{array}
%\]

%Define a monoidal strength on environments
%\[\str{\Gamma}{\termvar{x}}{\typeQ}:
%\sem{\envsubst{\Gamma}{\envvarfresh{x}{\typelift\typeQ}{{s}} }{x} } \to
%{!}\sem{\envsubst{\Gamma}{\envvarfresh{x}{\typeQ}{{s}}}{x} }\]
%as follows.
%\[\str{()}{\termvar{x}}{\typeQ} =
%\eta_{\typeO}\]
%
%\[\str{\envcombine{\Gamma}{\termvar{x} }}{\termvar{x}}{\typeQ} =
%s_{\Gamma,\typefresh{\typeQ}{{s}}} \circ \bigl(\str{\Gamma}{\termvar{x}}{\typeQ} \mathop{\&} \mathbf{1}_{\typefresh{\typelift\typeQ}{{s}}})\bigr) \]
%
%\[\str{\envcombine{\Gamma}{\envvarfresh{y}{\typeP}{{s'}} }}{\termvar{x}}{\typeQ} =
%s_{\Gamma, \typefresh{\typeP}{{s'}}} \circ \bigl(\str{\Gamma}{\termvar{x}}{\typeQ} \mathop{\&} \eta_{\typefresh{\typeP}{{s}}} \bigr)\]

%\begin{lemma}
%\[
%\str{\Gamma}{\termvar{x}}{\typeQ} \circ \envsubst{\Gamma}{\eta_{\typefresh{\typeQ}{{s}}}}{x} =
%\eta_{\envsubst{\Gamma}{\envvarfresh{x}{\typeQ}{{s}}}{x}}
%\]
%\end{lemma}

%\begin{proof}
%The proof proceeds by induction on $\Gamma$.
%\begin{enumerate}
%\item[$()$] \[
%\str{()}{\termvar{x}}{\typeQ} \circ \envsubst{()}{\eta_{\typefresh{\typeQ}{{s}}}}{x} =
%\eta_{\typeO} \circ \mathbf{1}_{\typeO} = \eta_{\typeO} = \eta_{\envsubst{()}{\envvarfresh{x}{\typeQ}{{s}}}{x}}
%\]
%\item[$\envcombine{\Gamma}{\termvar{x}}$] \[\begin{array}{rcl}
%\str{\envcombine{\Gamma}{\termvar{x}} }{\termvar{x}}{\typeQ} \circ \envsubst{(\envcombine{\Gamma}{\termvar{x}})}{\eta_{\typefresh{\typeQ}{{s}}}}{x} &=&
%s \circ \bigl( \str{\Gamma}{x}{\typeQ} \mathop{\&} \mathbf{1} \bigr) \circ \bigl( \envsubst{\Gamma}{\eta}{x} \mathop{\&} \eta \bigr) \\
%&=& s \circ \bigl( ( \str{\Gamma}{x}{\typeQ} \circ \envsubst{\Gamma}{\eta}{x} ) \mathop{\&} \eta \bigr) \\
%&=& s \circ ( \eta \mathop{\&} \eta) \\
%&=& \eta
%\end{array}\]
%\item[$\envcombine{\Gamma}{\envvarfresh{y}{\typeP}{{s'}} }$] \[\begin{array}{rcl}
%\str{\envcombine{\Gamma}{\termvar{y}} }{\termvar{x}}{\typeQ} \circ \envsubst{(\envcombine{\Gamma}{\termvar{y}})}{\eta_{\typefresh{\typeQ}{{s}}}}{x} &=&
%s \circ \bigl( \str{\Gamma}{x}{\typeQ} \mathop{\&} \eta \bigr) \circ \bigl( \envsubst{\Gamma}{\eta}{x} \mathop{\&} \mathbf{1} \bigr) \\
%&=& s \circ \bigl( ( \str{\Gamma}{x}{\typeQ} \circ \envsubst{\Gamma}{\eta}{x} ) \mathop{\&} \eta \bigr) \\
%&=& s \circ ( \eta \mathop{\&} \eta) \\
%&=& \eta
%\end{array}\]
%\end{enumerate}
%\end{proof}


\subsection{Denotational Semantics of Terms and Actions}

Typing judgements $\tjudge{s}{\Gamma}{t}{\typeP}$ denote arrows \begin{equation}
\label{densem:tjudge} \sem{\tjudge{s}{\Gamma}{t}{\typeP}} : \sem{\Gamma} \to
\typeP \end{equation} in $\mathbf{FMCts}_s$.
%
The denotation of a typing judgement is built by recursion on the derivation of
the typing judgement, making use of the various universal constructions
available in $\mathbf{FMCts}_s$.
%
Intuitively, the arrow $\sem{\tjudge{s}{\Gamma}{t}{\typeP}}$ receives some input
in its free variables, as typed by $\Gamma$, and returns the set of paths that
the term $t$ can perform with the given input.

The structural rules for variables, exchange, weakening and contraction make use
of the cartesian structure of $\mathbf{FMCts}_s$ in the usual fashion, as shown
in \ref{densem:variable}, \ref{densem:exchange}, \ref{densem:weakening} and
\ref{densem:contraction}.
%
The nominal structure gives rise to two extra structural rules.
%
The first permits adding extra assumptions on the freshness of input with
respect to certain names, which receives its semantics (\ref{densem:freshweak})
from the map $\tau$ defined in \ref{lemma:freshinclusion}.
%
The second permits extending the the `current' set of names from $s$ to $s'
\supseteq s$, and this rule receives its semantics (\ref{densem:suppweak-terms})
from the inclusion $\mathbf{FMCts}_s \hookrightarrow \mathbf{FMCts}_{s'}$.

Exponentials in $\mathbf{FMCts}_s$ give rise to a semantics for
$\lambda$-abstraction (\ref{densem:abstract}) and function application
(\ref{densem:apply}) much as in the simply-typed $\lambda$-calculus.
(\TODO{Cite?})

The monad $(!, \eta, \epsilon_{!})$ on $\mathbf{FMCts}_s$ gives rise to the
semantics for the anonymous prefix action $\bangaction$ (\ref{densem:prefix})
and for prefix-matching (\ref{densem:match}).
%
Combined with biproducts $\stdtypesum$ this gives a semantics for labelled
actions: the injection $\mathbf{in}_{\ell_0}$ into the biproduct corresponds to
tagging an action with the label $\ell_0$, whereas the projection
$\mathbf{out}_{\ell_0}$ corresponds to matching against the label $\ell_0$.

The isomorphism $\mathbf{abs} : \typerec{}{P}{\typeP} \cong
\typeP_j[\typerec{}{P}{\typeP}/\vec{P}] : \mathbf{rep}$ gives a semantics for
terms of recursively-defined types by folding (\ref{densem:abs}) and unfolding
(\ref{densem:rep}) the definition.
%
The hom-set $\sem{\Gamma} \to \typeP$ is $\omega$-complete which gives rise to a
semantics for recursive processes (\ref{densem:rec}) as the $\omega$-limit of
their finite unfoldings.

The hom-set $\sem{\Gamma} \to \typeP$ has more general joins than merely those
of $\omega$-chains, and such joins give rise to a semantics for nondeterministic
sums (\ref{densem:ndsum}).

Finally, the adjunction $(-)^{\freshfor a++} \dashv \delta_a^{++} :
\mathbf{FMCts}_s \leftrightarrows \mathbf{FMCts}_{s \udot \{a\}}$ of
\ref{deltafreshadjcts} gives a semantics of names and binding as demonstrated in
\ref{densem:new} and \ref{densem:newapply}.

Typing judgements $\atjudge{s}{\typeP}{p}{\typePp}$ denote arrows
\begin{equation} \label{densem:atjudge} \sem{\atjudge{s}{\typeP}{p}{\typePp}} :
\typeP \to \typelift\typePp \end{equation} in $\mathbf{FMCts}_s$ by recursion on
the structure of $p$ as shown below.
%
Intuitively the arrow $\sem{\atjudge{s}{\typeP}{p}{\typePp}}$ matches its input
against the action $p$ and returns a collection of possible resumptions after
performing $p$.

Often the type information is clear, and then
$\sem{\tjudge{s}{\Gamma}{t}{\typeP}}$ and
$\sem{\atjudge{s}{\typeP}{p}{\typePp}}$ are abbreviated to $\sem{t}$ and
$\sem{p}$ respectively.

\subsection{Structural Rules}

The denotational semantics associated with the usual structural rules make use
of the cartesian structure of each $\mathbf{FMCts}_s$: variables denote the
identity map on their underlying types; weakening corresponds to projection;
exchange corresponds to a twist map $\langle \pi_2, \pi_1 \rangle$; contraction
corresponds to the diagonal map $\langle \mathbf{1}, \mathbf{1} \rangle$.
%
The new structural rule of fresh-weakening, \begin{equation*} \infer[(s''
\subseteq s' \subseteq s)]
{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{s'} }}{t}{\typeP}}
{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{s''} }}{t}{\typeP}}
\end{equation*} comes from the map $\tau^{(s' \setminus s'')++}$ defined in
\ref{def:taucts}, which in turn arises from the map $\tau : (-)^{\freshfor a}
\to \mathbf{1}$ defined in \ref{lemma:freshinclusion}.
%
Notice that the discussion of \ref{tau:projection} shows that this is ultimately
given by the projection $(-) \otimes \mathbb A \to \mathbf{1}$.
%
The other new structural rule of support-weakening, \begin{equation*} \infer[(s'
\subseteq s)] {\tjudge{s}{\Gamma}{t}{\typeP}} {\tjudge{s'}{\Gamma}{t}{\typeP}}
\end{equation*} is simply given by the inclusion $\mathbf{FMCts}_{s'}
\hookrightarrow \mathbf{FMCts}_s'$.

% Definition of denotational semantics { {{
\begin{definition}[Semantics of Variable] \label{densem:variable} The meaning of
a free variable (with no freshness assumptions) is simply the identity map on
the underlying type.
%
\begin{equation*}
\sem{\tjudge{\varnothing}{\envvarfresh{x}{\typeP}{\varnothing}}{\termvar
x}{\typeP}} \defeq \mathbf{1}_{\typeP} \end{equation*} \end{definition}

\begin{definition}[Semantics of Weakening] \label{densem:weakening} Suppose that
the judgement
$\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{\varnothing}}
}{t}{\typeP}$ is derived from $\tjudge{s}{\Gamma}{t}{\typeP}$ by weakening, then
\begin{equation*}
\sem{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{\varnothing}}
}{t}{\typeP}} \defeq \sem{\tjudge{s}{\Gamma}{t}{\typeP}} \circ \mathbf{out}_1.
\end{equation*} \end{definition}

\begin{definition}[Semantics of Exchange] \label{densem:exchange} Suppose that a
typing judgement
$\tjudge{s}{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x2}{\typeQ
{}_2}{s_2}} {\envvarfresh{x1}{\typeQ {}_1}{s_1} }} }{\Lambda}}{t}{\typeP}$ is
derived from the typing judgement
$\tjudge{s}{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ
{}_1}{s_1}} {\envvarfresh{x2}{\typeQ {}_2}{s_2} }} }{\Lambda}}{t}{\typeP}$ by
exchange, let $\varsigma$ be the twist map defined in \ref{def:varsigma} and let
\[f = \sem{
\tjudge{s}{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ
{}_1}{s_1}} {\envvarfresh{x2}{\typeQ {}_2}{s_2} }} }{\Lambda}}{t}{\typeP}},\]
then define \begin{equation*}
\sem{\tjudge{s}{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x2}{\typeQ
{}_2}{s_2}} {\envvarfresh{x1}{\typeQ {}_1}{s_1} }} }{\Lambda}}{t}{\typeP}}
\defeq f \circ \bigl( \mathbf{1}_\Gamma \amp \varsigma_{{ {\typeQ
{}_1}^{\freshfor s_1}}, {{\typeQ {}_2}^{\freshfor s_2}} } \amp
\mathbf{1}_{\Lambda} \bigr) \end{equation*} \end{definition}

\begin{definition}[Semantics of Contraction] \label{densem:contraction} Suppose
that the judgement $\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ}{{s'}}
}}{\termsubst{t}{\termvar{x2}}{x1}}{\typeP}$ is derived from
$\tjudge{s}{\envcombine{\Gamma}{\envcombine
{\envvarfresh{x1}{\typeQ}{s'}}{\envvarfresh{x2}{\typeQ}{s'}} }}{t}{\typeP}$ by
contraction, let $\Delta$ be the diagonal map defined in \ref{def:diagonal} and
let \[f = \sem{\tjudge{s}{\envcombine{\Gamma}{\envcombine
{\envvarfresh{x1}{\typeQ}{s'}}{\envvarfresh{x2}{\typeQ}{s'}} }}{t}{\typeP}}\]
then define \begin{equation*}
\sem{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ}{{s'}}
}}{\termsubst{t}{\termvar{x2}}{x1}}{\typeP}} \defeq f \circ \bigl(
\mathbf{1}_{\Gamma} \amp \Delta_{\typeQ^{\freshfor s'}} \bigr) \end{equation*}
\end{definition}

\begin{definition}[Semantics of Fresh-Weakening] \label{densem:freshweak}
Suppose that $s'' \subseteq s' \subseteq s$ and that
$\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{s''}}}{t}{\typeP}$ is
derived from
$\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{s'}}}{t}{\typeP}$ by
fresh-weakening.
%
Let $\tau^{(s'\setminus s'')++} : (-)^{\freshfor (s' \setminus s'')++} \to
\mathbf{1}_{\mathbf{FMCts}_s}$ be as defined in \ref{def:taucts}, then define \[
\sem{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{s'}}}{t}{\typeP}} =
\sem{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{s''}}}{t}{\typeP}}
\circ (\mathbf{1}_{\Gamma} \amp \tau^{(s' \setminus s'')++}_{\typeQ^{\freshfor
s''}}).\] \end{definition}

\begin{definition}[Support-Weakening for Terms] \label{densem:suppweak-terms} If
$s' \subseteq s$ then let $J : \mathbf{FMCts}_{s'} \hookrightarrow
\mathbf{FMCts}_s$ be the inclusion of categories and define \begin{equation*}
\sem{\tjudge{s}{\Gamma}{t}{\typeP}} \defeq
J\sem{\tjudge{s'}{\Gamma}{t}{\typeP}}.  \end{equation*} \end{definition}

It is useful to characterise the action of these structural rules in terms of
their action on inputs of the form $\langle \gamma \rangle_{\Gamma}$ where
$\gamma \in \semp{\Gamma}$ is a tuple of paths in the appropriate environment
$\Gamma$.
%
As shown below, it turns out that these characterisations are all as one might
expect.


\begin{lemma}[Characterising Weakening]
\label{densem:weakening:characterisation} \[
\sem{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{\varnothing}}
}{t}{\typeP}}\langle \gamma, q
\rangle_{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{\varnothing}}} =
\sem{\tjudge{s}{\Gamma}{t}{\typeP}} \langle \gamma \rangle_\Gamma. \]
\end{lemma}

\begin{proof} \begin{equation} \begin{array}[t]{rcll}
%
\multicolumn{4}{l}{
\sem{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{\varnothing}}
}{t}{\typeP}} \circ \langle \mathord{\cdot}
\rangle_{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{\varnothing}}}} \\
%
&=& \sem{\tjudge{s}{\Gamma}{t}{\typeP}} \circ \mathbf{out}_1 \circ \langle
\mathord{\cdot}
\rangle_{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{\varnothing}}} & \text{by
\ref{densem:weakening}} \\
%
&=& \sem{\tjudge{s}{\Gamma}{t}{\typeP}} \circ \mathbf{out}_1 \circ
m_{\sem{\Gamma}, \typeP} \circ (\langle \mathord{\cdot} \rangle_{\Gamma} \times
\mathbf{1}_{\typeP}) & \text{by \ref{densem:def:angles}} \\
%
&=& \sem{\tjudge{s}{\Gamma}{t}{\typeP}} \circ \pi_1 \circ (\langle
\mathord{\cdot} \rangle_{\Gamma} \times \mathbf{1}_{\typeP}) & \text{by
\ref{characterisation:m:proj}} \\
%
&=& \sem{\tjudge{s}{\Gamma}{t}{\typeP}} \circ \langle \mathord{\cdot}
\rangle_{\Gamma} \circ \pi_1.
%
\end{array} \end{equation} \end{proof}


\begin{lemma}[Characterising Exchange] \begin{equation*}
\label{densem:exchange:characterisation} \begin{array}{l}
\sem{\tjudge{s}{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x2}{\typeQ
{}_2}{s_2}} {\envvarfresh{x1}{\typeQ {}_1}{s_1} }} }{\Lambda}}{t}{\typeP}}
\langle \gamma, q_2, q_1, \lambda
\rangle_{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x2}{\typeQ
{}_2}{s_2}} {\envvarfresh{x1}{\typeQ {}_1}{s_1} }} }{\Lambda}} \\ =
\sem{\tjudge{s}{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ
{}_1}{s_1}} {\envvarfresh{x2}{\typeQ {}_2}{s_2} }} }{\Lambda}}{t}{\typeP}}
\langle \gamma, q_1, q_2, \lambda
\rangle_{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ
{}_1}{s_1}} {\envvarfresh{x2}{\typeQ {}_2}{s_2} }} }{\Lambda}}.  \end{array}
\end{equation*} \end{lemma}

\begin{proof} It clearly suffices to show that \begin{equation} \begin{array}{l}
\Bigl( \mathbf{1}_{\Gamma} \amp \varsigma_{{ {\typeQ {}_1}^{\freshfor s_1}},
{{\typeQ {}_2}^{\freshfor s_2}} } \amp \mathbf{1}_{\Lambda} \Bigr) \circ \langle
\mathord{\cdot}
\rangle_{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ
{}_1}{s_1}} {\envvarfresh{x2}{\typeQ {}_2}{s_2} }} }{\Lambda}} \\ \qquad =
\langle \mathord{\cdot}
\rangle_{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x2}{\typeQ
{}_2}{s_2}} {\envvarfresh{x1}{\typeQ {}_1}{s_1} }} }{\Lambda}} \circ
\Bigl(\mathbf{1}_{\semp{\Gamma}} \times \langle \pi_2, \pi_1 \rangle \times
\mathbf{1}_{\semp{\Lambda}} \Bigr). \end{array} \end{equation}
%
The proof proceeds by induction on the structure of $\Lambda$. The interesting
case is when $\Lambda = \envempty$ which is as follows.
%
Firstly, note that \begin{equation} \begin{array}{l}
\mathbf{1}_{\Gamma} \amp \varsigma_{{
{\typeQ {}_1}^{\freshfor s_1}}, {{\typeQ {}_2}^{\freshfor s_2}} } \\ \qquad {} = \langle
\mathbf{out}_1, \mathbf{out}_3, \mathbf{out}_2 \rangle^{\amp} : \sem{\Gamma}
\amp \typeQsub{1}^{\freshfor s_1} \amp \typeQsub{2}^{\freshfor s_2} \to
\sem{\Gamma} \amp \typeQsub{2}^{\freshfor s_2} \amp \typeQsub{1}^{\freshfor
s_1}. \end{array} \end{equation}
%
Therefore by \ref{densem:def:angles} \begin{equation} \begin{array}[t]{rcll}
%
\multicolumn{4}{l}{\bigl( \mathbf{1}_{\Gamma} \amp \varsigma_{{ {\typeQ
{}_1}^{\freshfor s_1}}, {{\typeQ {}_2}^{\freshfor s_2}} } \bigr) \circ \langle
\mathord{\cdot} \rangle_{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ
{}_1}{s_1}} {\envvarfresh{x2}{\typeQ {}_2}{s_2} }} }} \\
%
&=& \langle \mathbf{out}_1, \mathbf{out}_3, \mathbf{out}_2 \rangle^{\amp} \circ
m_{\sem{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ {}_1}{s_1}} }, \typeQ {}_2
^{\freshfor s_2}} \circ \Bigl( \langle \mathord{\cdot}
\rangle_{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ {}_1}{s_1}} } \times
\phi^{(s_2)}_{\typeQ {}_2} \Bigr) \\
%
\end{array} \end{equation} so that by \ref{characterisation:m:proj}
\begin{equation} \begin{array}[t]{rcll}
%
\multicolumn{4}{l}{\langle \mathbf{out}_1, \mathbf{out}_3 \rangle^{\amp} \circ
\bigl( \mathbf{1}_{\Gamma} \amp \varsigma_{{ {\typeQ {}_1}^{\freshfor s_1}},
{{\typeQ {}_2}^{\freshfor s_2}} } \bigr) \circ \langle \mathord{\cdot}
\rangle_{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ {}_1}{s_1}}
{\envvarfresh{x2}{\typeQ {}_2}{s_2} }} }} \\
%
&=& \mathbf{out}_{12} \circ m_{\sem{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ
{}_1}{s_1}} }, \typeQ {}_2 ^{\freshfor s_2}} \circ \Bigl( \langle
\mathord{\cdot} \rangle_{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ {}_1}{s_1}}
} \times \phi^{(s_2)}_{\typeQ {}_2} \Bigr) \\
%
&=& \pi_{12} \circ \Bigl( \langle \mathord{\cdot}
\rangle_{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ {}_1}{s_1}} } \times
\phi^{(s_2)}_{\typeQ {}_2} \Bigr) \\
%
&=& \langle \mathord{\cdot} \rangle_{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ
{}_1}{s_1}} } \circ \pi_{12} \\
%
\end{array} \end{equation} and hence \begin{equation} \begin{array}[t]{rcll}
%
\multicolumn{4}{l}{\mathbf{out}_1 \circ \bigl( \mathbf{1}_{\Gamma} \amp
\varsigma_{{ {\typeQ {}_1}^{\freshfor s_1}}, {{\typeQ {}_2}^{\freshfor s_2}} }
\bigr) \circ \langle \mathord{\cdot}
\rangle_{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ {}_1}{s_1}}
{\envvarfresh{x2}{\typeQ {}_2}{s_2} }} }} \\
%
&=& \mathbf{out}_1 \circ \langle \mathord{\cdot}
\rangle_{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ {}_1}{s_1}} } \circ
\pi_{12} \\
%
&=& \mathbf{out}_1 \circ m_{\sem{\Gamma}, \typeQ {}_1^{\freshfor s_1}} \circ
\Bigl( \langle \mathord{\cdot} \rangle_{\Gamma} \times
\phi^{(s_1)}_{\typeQsub{1}} \Bigr) \circ \pi_{12} \\
%
&=& \pi_1 \circ \Bigl( \langle \mathord{\cdot} \rangle_{\Gamma} \times
\phi^{(s_1)}_{\typeQsub{1}} \Bigr) \circ \pi_{12} \\
%
&=& \langle \mathord{\cdot} \rangle_{\Gamma} \circ \pi_{1} \\
%
\end{array} \end{equation} and similarly \begin{equation} \begin{array}[t]{rcll}
%
\multicolumn{4}{l}{\mathbf{out}_3 \circ \bigl( \mathbf{1}_{\Gamma} \amp
\varsigma_{{ {\typeQ {}_1}^{\freshfor s_1}}, {{\typeQ {}_2}^{\freshfor s_2}} }
\bigr) \circ \langle \mathord{\cdot}
\rangle_{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ {}_1}{s_1}}
{\envvarfresh{x2}{\typeQ {}_2}{s_2} }} }} \\
%
&=& \phi^{(s_1)}_{\typeQsub{1}} \circ \pi_{2}. \\
%
\end{array} \end{equation} Furthermore, \begin{equation} \begin{array}[t]{rcll}
%
\multicolumn{4}{l}{\mathbf{out}_2 \circ \bigl( \mathbf{1}_{\Gamma} \amp
\varsigma_{{ {\typeQ {}_1}^{\freshfor s_1}}, {{\typeQ {}_2}^{\freshfor s_2}} }
\bigr) \circ \langle \mathord{\cdot}
\rangle_{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ {}_1}{s_1}}
{\envvarfresh{x2}{\typeQ {}_2}{s_2} }} }} \\
%
&=& \mathbf{out}_3 \circ m_{\sem{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ
{}_1}{s_1}} }, \typeQ {}_2 ^{\freshfor s_2}} \circ \Bigl( \langle
\mathord{\cdot} \rangle_{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ {}_1}{s_1}}
} \times \phi^{(s_2)}_{\typeQ {}_2} \Bigr) \\
%
&=& \pi_3 \circ \Bigl( \langle \mathord{\cdot}
\rangle_{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ {}_1}{s_1}} } \times
\phi^{(s_2)}_{\typeQ {}_2} \Bigr) \\
%
&=& \phi^{(s_2)}_{\typeQsub{2}} \circ \pi_{3}. \\
%
\end{array} \end{equation} Therefore by \ref{def:angleamp} and
\ref{characterisation:m:pair} \begin{equation} \begin{array}[t]{rcll}
%
\multicolumn{4}{l}{\bigl( \mathbf{1}_{\Gamma} \amp \varsigma_{{ {\typeQ
{}_1}^{\freshfor s_1}}, {{\typeQ {}_2}^{\freshfor s_2}} } \bigr) \circ \langle
\mathord{\cdot} \rangle_{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ
{}_1}{s_1}} {\envvarfresh{x2}{\typeQ {}_2}{s_2} }} }} \\
%
&=& \langle \langle \mathord{\cdot} \rangle_{\Gamma} \circ \pi_{1},
\phi^{(s_2)}_{\typeQsub{2}} \circ \pi_{3}, \phi^{(s_1)}_{\typeQsub{1}} \circ
\pi_{2} \rangle^{\amp} \\
%
&=& m_{\sem{\envcombine{\Gamma}{\envvarfresh{x2}{\typeQ {}_2}{s_2}} },
\typeQsub{1}^{\freshfor s_1}} \circ \Bigl( m_{\sem{\Gamma},
\typeQsub{2}^{\freshfor s_2}} \times \mathbf{1}_{\typeQsub{1}^{\freshfor s_1}}
\Bigr) \circ \langle \langle \mathord{\cdot} \rangle_{\Gamma} \circ \pi_{1},
\phi^{(s_2)}_{\typeQsub{2}} \circ \pi_{3}, \phi^{(s_1)}_{\typeQsub{1}} \circ
\pi_{2} \rangle \\
%
&=& m_{\sem{\envcombine{\Gamma}{\envvarfresh{x2}{\typeQ {}_2}{s_2}} },
\typeQsub{1}^{\freshfor s_1}} \circ \Bigl( \Bigl( m_{\sem{\Gamma},
\typeQsub{2}^{\freshfor s_2}} \circ \Bigl( \langle \mathord{\cdot}
\rangle_{\Gamma} \times \phi^{(s_2)}_{\typeQsub{2}} \Bigr) \Bigr) \times
\phi^{(s_1)}_{\typeQsub{1}} \Bigr) \circ \Bigl(\mathbf{1}_{\semp{\Gamma}} \times
\langle \pi_2, \pi_1 \rangle \Bigr) \\
%
&=& m_{\sem{\envcombine{\Gamma}{\envvarfresh{x2}{\typeQ {}_2}{s_2}} },
\typeQsub{1}^{\freshfor s_1}} \circ \Bigl( \langle \mathord{\cdot}
\rangle_{\envcombine{\Gamma}{\envvarfresh{x2}{\typeQ {}_2}{s_2}} } \times
\phi^{(s_1)}_{\typeQsub{1}} \Bigr) \circ \Bigl(\mathbf{1}_{\semp{\Gamma}} \times
\langle \pi_2, \pi_1 \rangle \Bigr) \\
%
&=& \langle \mathord{\cdot}
\rangle_{\envcombine{\Gamma}{\envcombine{\envvarfresh{x2}{\typeQ {}_2}{s_2}}
{\envvarfresh{x1}{\typeQ {}_1}{s_1} }} } \circ \Bigl(\mathbf{1}_{\semp{\Gamma}}
\times \langle \pi_2, \pi_1 \rangle \Bigr) \\
%
\end{array} \end{equation} as required.


Now for the inductive case assume that \begin{equation} \begin{array}{l} \Bigl(
\mathbf{1}_{\Gamma} \amp \varsigma_{{ {\typeQ {}_1}^{\freshfor s_1}}, {{\typeQ
{}_2}^{\freshfor s_2}} } \amp \mathbf{1}_{\Lambda} \Bigr) \circ \langle
\mathord{\cdot}
\rangle_{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ
{}_1}{s_1}} {\envvarfresh{x2}{\typeQ {}_2}{s_2} }} }{\Lambda}} \\ \qquad =
\langle \mathord{\cdot}
\rangle_{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x2}{\typeQ
{}_2}{s_2}} {\envvarfresh{x1}{\typeQ {}_1}{s_1} }} }{\Lambda}} \circ
\Bigl(\mathbf{1}_{\semp{\Gamma}} \times \langle \pi_2, \pi_1 \rangle \times
\mathbf{1}_{\semp{\Lambda}} \Bigr). \end{array} \end{equation} then
\begin{equation} \begin{array}[t]{rcll}
%
\multicolumn{4}{l}{\Bigl( \mathbf{1}_{\Gamma} \amp \varsigma_{{ {\typeQ
{}_1}^{\freshfor s_1}}, {{\typeQ {}_2}^{\freshfor s_2}} } \amp
\mathbf{1}_{\envcombine{\Lambda}{\envvarfresh{y}{\typeR}{r}}} \Bigr) \circ
\langle \mathord{\cdot}
\rangle_{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ
{}_1}{s_1}} {\envvarfresh{x2}{\typeQ {}_2}{s_2} }}
}{\envcombine{\Lambda}{\envvarfresh{y}{\typeR}{r}}}}} \\
%
&=& \Bigl( \mathbf{1}_{\Gamma} \amp \varsigma_{{ {\typeQ {}_1}^{\freshfor s_1}},
{{\typeQ {}_2}^{\freshfor s_2}} } \amp \mathbf{1}_{\Lambda} \amp
\mathbf{1}_{\widehat{\typeR^{\freshfor r}}} \Bigr) \\&& {} \circ
m_{\sem{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ
{}_1}{s_1}} {\envvarfresh{x2}{\typeQ {}_2}{s_2} }} }{\Lambda}},
\typeR^{\freshfor r}} \circ (\langle \mathord{\cdot}
\rangle_{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ
{}_1}{s_1}} {\envvarfresh{x2}{\typeQ {}_2}{s_2} }} }{\Lambda}} \times
\phi_\typeR^{(r)}) \\
%
&=& m_{\sem{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x2}{\typeQ
{}_2}{s_2}} {\envvarfresh{x1}{\typeQ {}_1}{s_1} }} }{\Lambda}},
\typeR^{\freshfor r}} \\&&{} \circ \Bigl( \Bigl( \mathbf{1}_{\Gamma} \amp
\varsigma_{{ {\typeQ {}_1}^{\freshfor s_1}}, {{\typeQ {}_2}^{\freshfor s_2}} }
\amp \mathbf{1}_{\Lambda} \Bigr) \times \mathbf{1}_{\widehat{\typeR^{\freshfor
r}}} \Bigr) \\&&{} \circ (\langle \mathord{\cdot}
\rangle_{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ
{}_1}{s_1}} {\envvarfresh{x2}{\typeQ {}_2}{s_2} }} }{\Lambda}} \times
\phi_\typeR^{(r)}) \\
%
&=& m_{\sem{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x2}{\typeQ
{}_2}{s_2}} {\envvarfresh{x1}{\typeQ {}_1}{s_1} }} }{\Lambda}},
\typeR^{\freshfor r}} \\&&{} \circ \Bigl( \Bigl( \Bigl( \mathbf{1}_{\Gamma} \amp
\varsigma_{{ {\typeQ {}_1}^{\freshfor s_1}}, {{\typeQ {}_2}^{\freshfor s_2}} }
\amp \mathbf{1}_{\Lambda} \Bigr) \circ \langle \mathord{\cdot}
\rangle_{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ
{}_1}{s_1}} {\envvarfresh{x2}{\typeQ {}_2}{s_2} }} }{\Lambda}} \Bigr) \times
\phi_\typeR^{(r)} \Bigr) \\
%
&=& m_{\sem{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x2}{\typeQ
{}_2}{s_2}} {\envvarfresh{x1}{\typeQ {}_1}{s_1} }} }{\Lambda}},
\typeR^{\freshfor r}} \\&&{} \circ \Bigl( \Bigl( \langle \mathord{\cdot}
\rangle_{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x2}{\typeQ
{}_2}{s_2}} {\envvarfresh{x1}{\typeQ {}_1}{s_1} }} }{\Lambda}} \circ
\Bigl(\mathbf{1}_{\semp{\Gamma}} \times \langle \pi_2, \pi_1 \rangle \times
\mathbf{1}_{\semp{\Lambda}} \Bigr) \Bigr) \times \phi_\typeR^{(r)} \Bigr) \\
%
&=& m_{\sem{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x2}{\typeQ
{}_2}{s_2}} {\envvarfresh{x1}{\typeQ {}_1}{s_1} }} }{\Lambda}},
\typeR^{\freshfor r}} \circ \Bigl( \langle \mathord{\cdot}
\rangle_{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x2}{\typeQ
{}_2}{s_2}} {\envvarfresh{x1}{\typeQ {}_1}{s_1} }} }{\Lambda}} \times
\phi_\typeR^{(r)} \Bigr) \\ \\&&{} \circ \Bigl(\mathbf{1}_{\semp{\Gamma}} \times
\langle \pi_2, \pi_1 \rangle \times \mathbf{1}_{\semp{\Lambda}} \times
\mathbf{1}_{\widehat{\typeR}^{\freshfor r}} \Bigr) \\
%
&=& \langle \mathord{\cdot}
\rangle_{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x2}{\typeQ
{}_2}{s_2}} {\envvarfresh{x1}{\typeQ {}_1}{s_1} }}
}{\envcombine{\Lambda}{\envvarfresh{y}{\typeR}{r}}}} \circ
\Bigl(\mathbf{1}_{\semp{\Gamma}} \times \langle \pi_2, \pi_1 \rangle \times
\mathbf{1}_{\semp{\envcombine{\Lambda}{\envvarfresh{y}{\typeR}{r}}}} \Bigr)
\end{array} \end{equation} as required.  \end{proof}

\begin{lemma}[Characterising Contraction] \begin{equation*}
\label{densem:contraction:characterisation} \begin{array}{l}
\sem{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ}{{s'}}
}}{\termsubst{t}{\termvar{x2}}{x1}}{\typeP}} \langle \gamma, q
\rangle_{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ}{{s'}} }} \\ =
\sem{\tjudge{s}{\envcombine{\Gamma}{\envcombine
{\envvarfresh{x1}{\typeQ}{s'}}{\envvarfresh{x2}{\typeQ}{s'}} }}{t}{\typeP}}
\langle \gamma, q, q \rangle_{\envcombine{\Gamma}{\envcombine
{\envvarfresh{x1}{\typeQ}{s'}}{\envvarfresh{x2}{\typeQ}{s'}} }} \\ \end{array}
\end{equation*} \end{lemma}

\begin{proof} Firstly note that $\Delta_{\typeQ^{\freshfor s'}} =
m_{\typeQ^{\freshfor s'}, \typeQ^{\freshfor s'}} \circ \langle
\mathbf{1}_{\typeQ^{\freshfor s'}}, \mathbf{1}_{\typeQ^{\freshfor s'}} \rangle$
by \ref{characterisation:m:pair} and \ref{def:diagonal}.
%
Therefore \begin{equation} \begin{array}[t]{rcll}
%
\multicolumn{4}{l}{ \bigl( \mathbf{1}_{\Gamma} \amp \Delta_{\typeQ^{\freshfor
s'}} \bigr) \circ \langle \cdot
\rangle_{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ}{{s'}} }} } \\
%
&=& \bigl( \mathbf{1}_{\Gamma} \amp \Delta_{\typeQ^{\freshfor s'}} \bigr) \circ
m_{\sem{\Gamma}, \typeQ^{\freshfor s'} } \circ \Bigl( \langle \cdot
\rangle_{\Gamma} \times \phi^{(s')}_{\typeQ} \Bigr) \\
%
&=& m_{\sem{\Gamma}, \typeQ^{\freshfor s'} \amp \typeQ^{\freshfor s'} } \circ
\bigl( \mathbf{1}_{\Gamma} \times \Delta_{\typeQ^{\freshfor s'}} \bigr) \circ
\Bigl( \langle \cdot \rangle_{\Gamma} \times \phi^{(s')}_{\typeQ} \Bigr) \\
%
&=& m_{\sem{\Gamma}, \typeQ^{\freshfor s'} \amp \typeQ^{\freshfor s'} } \circ
\bigl( \mathbf{1}_{\Gamma} \times m_{\typeQ^{\freshfor s'}, \typeQ^{\freshfor
s'}} \bigr) \\&&{} \circ \bigl( \mathbf{1}_{\Gamma} \times \langle
\mathbf{1}_{\widehat{\typeQ^{\freshfor s'}}},
\mathbf{1}_{\widehat{\typeQ^{\freshfor s'}}} \rangle \bigr) \circ \Bigl( \langle
\cdot \rangle_{\Gamma} \times \phi^{(s')}_{\typeQ} \Bigr) \\
%
&=& m_{\sem{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ}{{s'}} }},
\typeQ^{\freshfor s'} } \circ \bigl( m_{\sem{\Gamma}, \typeQ^{\freshfor s'}}
\times \mathbf{1}_{\widehat{\typeQ^{\freshfor s'}}} \bigr) \\&&{} \circ \bigl(
\mathbf{1}_{\Gamma} \times \langle \mathbf{1}_{\widehat{\typeQ^{\freshfor s'}}},
\mathbf{1}_{\widehat{\typeQ^{\freshfor s'}}} \rangle \bigr) \circ \Bigl( \langle
\cdot \rangle_{\Gamma} \times \phi^{(s')}_{\typeQ} \Bigr) \\
%
&=& m_{\sem{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ}{{s'}} }},
\typeQ^{\freshfor s'} } \circ \bigl( m_{\sem{\Gamma}, \typeQ^{\freshfor s'}}
\times \mathbf{1}_{\widehat{\typeQ^{\freshfor s'}}} \bigr) \\&&{} \circ \Bigl(
\langle \cdot \rangle_{\Gamma} \times \phi^{(s')}_{\typeQ} \times
\phi^{(s')}_{\typeQ} \Bigr) \circ \bigl( \mathbf{1}_{\semp{\Gamma}} \times
\langle \mathbf{1}_{\widehat{\typeQ}^{\freshfor s'}},
\mathbf{1}_{\widehat{\typeQ}^{\freshfor s'}} \rangle \bigr)  \\
%
&=& m_{\sem{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ}{{s'}} }},
\typeQ^{\freshfor s'} } \circ \Bigl(\langle \cdot
\rangle_{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ}{{s'}} }} \times
\phi^{(s')}_{\typeQ} \Bigr) \\&&{} \circ \bigl( \mathbf{1}_{\semp{\Gamma}}
\times \langle \mathbf{1}_{\widehat{\typeQ}^{\freshfor s'}},
\mathbf{1}_{\widehat{\typeQ}^{\freshfor s'}} \rangle \bigr)  \\
%
&=& \langle \cdot \rangle_{\envcombine{\Gamma}{\envcombine
{\envvarfresh{x1}{\typeQ}{s'}}{\envvarfresh{x2}{\typeQ}{s'}} }}  \\&&{} \circ
\bigl( \mathbf{1}_{\semp{\Gamma}} \times \langle
\mathbf{1}_{\widehat{\typeQ}^{\freshfor s'}},
\mathbf{1}_{\widehat{\typeQ}^{\freshfor s'}} \rangle \bigr)  \\
%
\end{array} \end{equation} as required. \end{proof}

\begin{lemma}[Characterising Fresh-Weakening] \[
\sem{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{s'}}}{t}{\typeP}}
\langle \gamma, q \rangle_{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{s'}} } =
\sem{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{s''}}}{t}{\typeP}}
\langle \gamma, q \rangle_{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{s''}.}}
\] \end{lemma}

\begin{proof} Firstly, \begin{equation} \begin{array}[t]{rcl}
\multicolumn{3}{l}{ \tau^{(s' \setminus s'')++}_{\typeQ^{\freshfor s''}} \circ
\phi_{\typeQ}^{(s')} }\\
%
&=& \tau^{(s' \setminus s'')}_{\widehat{\typeQ^{\freshfor s''}}} \circ
{\phi_{\typeQ^{\freshfor s''}}^{(s' \setminus s'')}}^{-1} \circ
\phi_{\typeQ}^{(s')} \\
%
&=& \tau^{(s' \setminus s'')}_{\widehat{\typeQ^{\freshfor s''}}} \circ
{\phi_{\typeQ^{\freshfor s''}}^{(s' \setminus s'')}}^{-1} \circ
\phi_{\typeQ^{\freshfor s''}}^{(s' \setminus s'')} \circ
{\phi_{\typeQ}^{(s'')}}^{\freshfor (s' \setminus s'')} \\
%
&=& \tau^{(s' \setminus s'')}_{\widehat{\typeQ^{\freshfor s''}}} \circ
{\phi_{\typeQ}^{(s'')}}^{\freshfor (s' \setminus s'')} \\
%
&=& \phi_{\typeQ}^{(s'')} \circ \tau^{(s' \setminus
s'')}_{\widehat{\typeQ}^{\freshfor s''}} \\
%
\end{array} \end{equation} so that \begin{equation} \begin{array}[t]{rcl}
\multicolumn{3}{l}{\bigl( \mathbf{1}_{\Gamma} \amp \tau^{(s' \setminus
s'')++}_{\typeQ^{\freshfor s''}} \bigr) \circ \langle \cdot
\rangle_{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{s'}}}} \\
%
&=& \bigl( \mathbf{1}_{\Gamma} \amp \tau^{(s' \setminus
s'')++}_{\typeQ^{\freshfor s''}} \bigr) \circ m_{\sem{\Gamma}, \typeQ^{\freshfor
s'}} \circ \bigl( \langle \cdot \rangle_\Gamma \times \phi_{\typeQ}^{(s')}
\bigr) \\
%
&=& m_{\sem{\Gamma}, \typeQ^{\freshfor s''}} \circ \bigl( \mathbf{1}_{\Gamma}
\times \tau^{(s' \setminus s'')++}_{\typeQ^{\freshfor s''}} \bigr) \circ \bigl(
\langle \cdot \rangle_\Gamma \times \phi_{\typeQ}^{(s')} \bigr) \\
%
&=& m_{\sem{\Gamma}, \typeQ^{\freshfor s''}} \circ \bigl( \langle \cdot
\rangle_{\Gamma} \times \bigl( \tau^{(s' \setminus s'')++}_{\typeQ^{\freshfor
s''}} \circ \phi_{\typeQ}^{(s')} \bigr) \bigr) \\
%
&=& m_{\sem{\Gamma}, \typeQ^{\freshfor s''}} \circ \bigl( \langle \cdot
\rangle_{\Gamma} \times \bigl( \phi_{\typeQ}^{(s'')} \circ \tau^{(s' \setminus
s'')}_{\widehat{\typeQ}^{\freshfor s''}} \bigr) \bigr) \\
%
&=& \langle \cdot \rangle_{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{s''}}}
\circ \bigl( \mathbf{1}_{\Gamma} \times \tau^{(s' \setminus
s'')}_{\widehat{\typeQ}^{\freshfor s''}} \bigr) \\
%
\end{array} \end{equation} as required. \end{proof}


\begin{lemma}[Characterising Support-Weakening for Terms]
\label{densem:suppweak-terms:characterisation} \begin{equation*}
\sem{\tjudge{s}{\Gamma}{t}{\typeP}} \langle \gamma \rangle_{\Gamma} =
\sem{\tjudge{s'}{\Gamma}{t}{\typeP}} \langle \gamma \rangle_{\Gamma.}
\end{equation*} \end{lemma}

\begin{proof} Immediate. \end{proof}







\subsection{Prefixing and Matching}

The adjunction $\mathbf{FMLin}_s (\typelift\typeP, \typeQ) \cong
\mathbf{FMCts}_s (\typeP, \typeQ)$ of \ref{bang:adj} gives rise to a semantics
for an anonymous prefix action, written $\bangaction$.
%
The unit $\eta$ acts as a constructor for this action, taking a term $t$ to the
prefixed term $\bang{t}$ as follows.

\begin{definition}[Semantics of Prefix] \label{densem:prefix} \begin{equation*}
\sem{\tjudge{s}{\Gamma}{\bang{t}}{\typelift\typeP}} \defeq \eta_{\typeP} \circ
\sem{\tjudge{s}{\Gamma}{t}{\typeP}}. \end{equation*} \end{definition}

For example, the process $\tjudge{\varnothing}{}{\inactive}{\typeO}$ can perform
no action and has empty denotation, but
$\sem{\tjudge{\varnothing}{}{\bang{\inactive}}{\typelift\typeO}} = \eta_{\typeO}
\circ \sem{\inactive} = \{\varnothing\}$ is not empty and indeed the operational
semantics shows that $\bang{\inactive}$ can perform an action.
%
The counit $\epsilon$ acts as a destructor for the $\bangaction$ action,
intuitively `matching' a $\bangaction$ action in the output of a term $u$ and
passing the resumption after performing the $\bangaction$ to a term $t$.
%
More precisely, if $\tjudge{s}{\Lambda}{u}{\typelift\typeQ}$ and
$\tjudge{s}{\envvarfresh{x}{\typeQ}{\varnothing}}{t}{\typeP}$ then
\begin{equation} \begin{array}[t]{l}
\sem{\tjudge{s}{\Lambda}{\matchz{\varnothing}{u}{\bangaction}{x}{t}{\typeQ}}{\typeP}}
\\ \quad {} \defeq \epsilon_{\typeP} \circ
{!}\sem{\tjudge{s}{\envvarfresh{x}{\typeQ}{\varnothing}}{t}{\typeP}} \circ
\sem{\tjudge{s}{\Lambda}{u}{\typelift\typeQ}}. \end{array} \end{equation} For
example,
$\sem{\tjudge{\varnothing}{}{\matchz{\varnothing}{\bang\inactive}{\bangaction}{x}{\termvar{x}}{\typeO}}{\typeO}}
= \epsilon_{\typeO} \circ \eta_{\typeO} \circ \sem{\inactive} = \varnothing$,
and the operational semantics shows that after $\bang\inactive$ has performed
the action $\bangaction$ it can perform no further actions.
%
This works if $t$ has no free variables except for $\termvar{x}$.
%
More generally, if
$\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{\varnothing}}}{t}{\typeP}$
then it is necessary to use the strength map $s$ of \ref{def:strength} as
follows.
%
\begin{equation} \begin{array}[t]{l}
\sem{\tjudge{s}{\envcombine{\Gamma}{\Lambda}}{\matchz{\varnothing}{u}{\bangaction}{x}{t}{\typeQ}}{\typeP}}
\\ \quad {} \defeq \epsilon_{\typeP} \circ
{!}\sem{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{\varnothing}}}{t}{\typeP}}
\circ s_{\Gamma, \typeQ} \circ (\mathbf{1}_{\Gamma} \amp
\sem{\tjudge{s}{\Lambda}{u}{\typelift\typeQ}}). \end{array} \end{equation}
%
There are actions other than $\bangaction$ and it is useful to be able to match
against any action $q$ that $u$ may perform.
%
Suppose now that $\tjudge{s}{\Lambda}{u}{\typeQp}$ and also that
$\atjudge{s}{\typeQp}{q}{\typeQ}$, then matching the output of $u$ against the
action $q$ can be achieved using the map $\sem{\atjudge{s}{\typeQp}{q}{\typeQ}}
: \typeQp \to \typelift\typeQ$ defined in \ref{} as follows.
%
\begin{equation} \begin{array}[t]{l}
\sem{\tjudge{s}{\envcombine{\Gamma}{\Lambda}}{\matchz{\varnothing}{u}{q}{x}{t}{\typeQp}}{\typeP}}
\\ \quad {} \defeq \epsilon_{\typeP} \circ
{!}\sem{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{\varnothing}}}{t}{\typeP}}
\circ s_{\Gamma, \typeQ} \\ \quad {} \circ (\mathbf{1}_{\Gamma} \amp
(\sem{\atjudge{s}{\typeQp}{q}{\typeQ}} \circ
\sem{\tjudge{s}{\Lambda}{u}{\typeQp}})). \end{array} \end{equation}
%
In full generality, the free variable $\termvar{x}$ of $t$ may have some
freshness assumptions imposed on it, which leads to the following definition.

\begin{definition}[Semantics of Pattern Matching] \label{densem:match} Suppose
that the typing judgements
$\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{s'}}}{t}{\typeP}$,
$\tjudge{s''}{\Lambda}{u}{\typeQp}$ and $\atjudge{s''}{\typeQp}{q}{\typeQ}$
hold, where $s'' \subseteq s \setminus s'$.
%
Let $\phi^{{!}(s')} : ({!}-)^{\freshfor s'} \cong {!}((-)^{\freshfor s'})$ be as
defined in \ref{}, then \begin{equation*} \begin{array}[t]{l}
\sem{\tjudge{s}{\envcombine{\Gamma}{\Lambda}}{\matchz{s'}{u}{q}{x}{t}{\typeQp}}{\typeP}}
\\ \quad {} \defeq \epsilon_{\typeP} \circ
{!}\sem{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{s'}}}{t}{\typeP}}
\circ s_{\Gamma, \typeQ^{\freshfor s'}} \\ \quad {} \circ
\left(\mathbf{1}_{\Gamma} \amp \left(\widehat{\phi^{{!}(s')}_{\typeQ}} \circ
\sem{\atjudge{s''}{\typeQp}{q}{\typeQ}}^{\freshfor s'++} \circ
\sem{\tjudge{s''}{\Lambda}{u}{\typeQp}}^{\freshfor s'++} \right) \right).
\end{array} \end{equation*} \end{definition}



\begin{lemma}[Characterising Prefixing]
\label{densem:prefix:characterisation} \[ P \in
\sem{\tjudge{s}{\Gamma}{\bang{t}}{\typelift\typeP}} \langle\gamma\rangle \quad
\Leftrightarrow \quad P \subseteq \sem{\tjudge{s}{\Gamma}{t}{\typeP}}
\langle\gamma\rangle \text{ and $P$ is isolated in $\widehat{\typeP}$}
\]
\end{lemma}

\begin{proof} By \ref{densem:prefix} and the definition of $\eta$. \end{proof}

\begin{lemma}[Characterising Pattern Matching]
\label{densem:match:characterisation} Suppose that $\gamma \in \semp{\Gamma}$,
$\lambda \in \semp{\envfresh{\Lambda}{s'}}$ and \[p \in
\sem{\tjudge{s}{\envcombine{\Gamma}{\envfresh{\Lambda}{s'}}}
{\matchz{s'}{u}{q}{x}{t}{\typeQp}}{\typeP}} \langle \gamma, \lambda
\rangle_{\envcombine{\Gamma}{\envfresh{\Lambda}{s'}}}\] then there exists $Q$
such that $p \in \sem{t} \langle \gamma, Q
\rangle_{\envcombine{\Gamma}{\envvarfresh{x}{\typeQp}{s'}}}$ and $Q \in
\bigl(\sem{q} \circ \sem{u}\bigr) \langle \lambda \rangle_{\Lambda}$ and $Q
\freshfor s'$.
\end{lemma}

\begin{proof} Let \begin{equation} f = \widehat{\phi^{{!}(s')}_{\typeQp}} \circ
\sem{\atjudge{s''}{\typeQ}{q}{\typeQp}}^{\freshfor s'++} \circ
\sem{\tjudge{s''}{\Lambda}{u}{\typeQ}}^{\freshfor s'++}, \end{equation} then
\begin{equation} \begin{array}[t]{rcl} p &\in&
\sem{\tjudge{s}{\envcombine{\Gamma}{\envfresh{\Lambda}{s'}}}
{\matchz{s'}{u}{q}{x}{t}{\typeQp}}{\typeP}} \langle \gamma, \lambda
\rangle_{\envcombine{\Gamma}{\envfresh{\Lambda}{s'}}} \\ \rule{0pt}{4ex}&=&
\bigl(\epsilon_\typeP \circ {!}\sem{t} \circ s_{\Gamma,\typeQp^{\freshfor s'}}
\circ (\mathbf{1}_{\Gamma} \amp f)\bigr) \langle \gamma, \lambda
\rangle_{\envcombine{\Gamma}{\envfresh{\Lambda}{s'}}} \\ \rule{0pt}{4ex}&=&
\mathord{\bigcup} \bigl( {!}\sem{t} \bigl( s_{\Gamma, \typeQp^{\freshfor s'}}
(\langle \gamma \rangle_{\Gamma} \uplus f\langle \lambda
\rangle_{\envfresh{\Lambda}{s'}}) \bigr)\bigr) \\ \end{array} \end{equation} and
hence there exists $P \in {!}\sem{t} \bigl( s_{\Gamma, \typeQp^{\freshfor s'}}
(\langle \gamma \rangle_{\Gamma} \uplus f\langle \lambda
\rangle_{\envfresh{\Lambda}{s'}}) \bigr)\bigr)$ such that $p \in P$.
%
By the definition of the ${!}$ functor this means that $P$ is isolated and there
exists $Q_0 \in s_{\Gamma, \typeQp^{\freshfor s'}} (\langle \gamma
\rangle_{\Gamma} \uplus f\langle \lambda \rangle_{\envfresh{\Lambda}{s'}})$ such
that $P \subseteq \sem{t}Q_0$, and hence $p \in \sem{t}Q_0$.
%
By \ref{concrete:strength} this means that $Q_0 = Q_1 \uplus Q_2$ where $Q_1
\subseteq \langle \gamma \rangle_\Gamma$ is isolated and $Q_2 \in f \langle
\lambda \rangle_{\envfresh{\Lambda}{s'}}$.
%
Therefore there exists $\gamma' \subseteq \gamma$ such that $Q_1 = \langle
\gamma' \rangle_\Gamma$ so that by monotonicity it follows that $P \subseteq
\sem{t}(\langle \gamma \rangle_\Gamma \uplus Q_2)$.
%
Also, since $Q_2 \in f \langle \lambda \rangle_{\envfresh{\Lambda}{s'}} =
\widehat{\phi_{\typeQp}} \bigl( (\sem{q} \circ \sem{u})^{\freshfor s'} \langle
\lambda \rangle_{\envfresh{\Lambda}{s'}} \bigr)$ this means that
$\bigl(\phi_{\typeQp}^{-1} Q_2\bigr) \in \bigl(\sem{q} \circ
\sem{u}\bigr)^{\freshfor s'} \langle \lambda \rangle_{\envfresh{\Lambda}{s'}} =
\bigl\{ Q \in \sem{q} \circ \sem{u} \langle \lambda \rangle_{\Lambda} \mid Q
\freshfor s' \bigr\}$.

Letting $Q = \phi_{\typeQp}^{-1}Q_2$, this means that if $p \in
\sem{\tjudge{s}{\envcombine{\Gamma}{\envfresh{\Lambda}{s'}}}
{\matchz{s'}{u}{q}{x}{t}{\typeQp}}{\typeP}} \langle \gamma, \lambda
\rangle_{\envcombine{\Gamma}{\envfresh{\Lambda}{s'}}}$ then there exists $Q$
such that $p \in \sem{t} \langle \gamma, Q
\rangle_{\envcombine{\Gamma}{\envvarfresh{x}{\typeQp}{s'}}}$ and $Q \in
\bigl(\sem{q} \circ \sem{u}\bigr) \langle \lambda \rangle_{\Lambda}$ and $Q
\freshfor s'$ as required.  \end{proof}

\subsubsection{Recursion} \TODO{Some bold assertions here!} By \ref{cts:homsets} the
hom-set $\mathbf{FMCts}_s(\sem{\Gamma}, \typeP)$ is a poset which has all joins
of $\omega$-chains.
%
Let $f =
\sem{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeP}{\varnothing}
}}{t}{\typeP}}$ and consider the operation on homsets $f^* :
\mathbf{FMCts}_s(\sem{\Gamma}, \typeP) \to \mathbf{FMCts}_s(\sem{\Gamma},
\typeP)$ given by \[f^*(g) = f \circ (\mathbf{1}_{\Gamma} \amp g) \circ
\Delta_{\sem{\Gamma}}.\]
%
Composition preserves joins of $\omega$-chains in both its arguments by \ref{}
and the functor $\mathbf{1} \amp (-)$ preserves joins of $\omega$-chains by
\ref{}, so the operation $f^*$ is continuous.
%
Therefore by Kleene's fixpoint theorem it has a least fixed point
$\mathrm{fix}(f^*)$ defined as follows.
%
Let $g_0 = \varnothing \in \mathbf{FMCts}_s(\sem{\Gamma}, \typeP)$ and for each
$n \in \omega$ define $g_{n+1} = f \circ (\mathbf{1}_{\Gamma} \amp g_n) \circ
\Delta_{\sem{\Gamma}}$, then $\mathrm{fix}(f^*) \langle \gamma \rangle =
\bigcup_{n \in \omega} g_n \langle \gamma \rangle$.
%
Define $\sem{\tjudge{s}{\Gamma}{\rec{x}{t}}{\typeP}} = \mathrm{fix}(f^*)$.


This operation is continuous so by Tarski's theorem
it has a least fixed point, $\mathrm{fix}(f^*)$. Define
$\sem{\tjudge{s}{\Gamma}{\rec{x}{t}}{\typeP}} = \mathrm{fix}(f^*)$. Concretely,
this fixed point may be obtained as follows: define $g_0 = \bot \in
\mathbf{FMCts}_s(\sem{\Gamma}, \typeP)$ and for each $n \in \omega$ define
$g_{n+1} = f \circ (\mathbf{1}_{\Gamma} \amp g_n) \circ
\Delta_{\sem{\Gamma}}$, then $\sem{\tjudge{s}{\Gamma}{\rec{x}{t}}{\typeP}}
\langle \gamma \rangle = \bigcup_{n \in \omega} g_n \langle \gamma \rangle$.

\TODO{Tarski's theorem is Kleene's?}

\subsubsection{Prefix-Match} Let $\sem{t} =
\sem{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQp}{s'}
}}{t}{\typeP}}$, $\sem{u} = \sem{\tjudge{s''}{\Lambda}{u}{\typeQ}}$ and $\sem{q}
= \sem{\atjudge{s''}{\typeQ}{q}{\typeQp}}$. Let $\phi : ({!}-)^{\freshfor s'}
\cong {!}\left((-)^{\freshfor s'}\right)$. Define $f$ to be the composition
\[
\xymatrix{
\sem{\Lambda}^{\freshfor s'}
\ar[r]^{\sem{u}^{\freshfor s'}}
&
\typeQ^{\freshfor s'}
\ar[r]^{\sem{q}^{\freshfor s'}}
&
\left(\typelift\typeQp\right)^{\freshfor s'}
\ar[r]^{\widehat{\phi_{\typeQp}}}
&
\typelift{\left(\typeQp^{\freshfor s'}\right)}.
}\]

Define a natural `strength' map $\mathbf{str}^{\Gamma} : \sem{\Gamma}
\amp {!}(-) \to {!}\left(\sem{\Gamma} \amp \mathord{-}\right)$ by
the composition
\[\xymatrix{
\sem{\Gamma} \amp {!}(-)
\ar[r]^{\eta_{\sem{\Gamma}} \amp \mathbf{1}}
&
{!}\sem{\Gamma} \amp {!}(-)
\ar[r]^s
&
{!}\bigl(\sem{\Gamma} \amp (-)\bigr).
}\]
Finally define $\sem{\tjudge{s}{\envcombine{\Gamma}{\envfresh{\Lambda}{s'}}}
{\matchz{s'}{u}{q}{x}{t}{\typeQp}}{\typeP}}$ to be the composition
\[
\xymatrix{
\sem{\Gamma} \amp \sem{\Lambda}^{\freshfor s'}
\ar[r]^{\mathbf{1}_{\Gamma} \amp f}
&
\sem{\Gamma} \amp \typelift{\left(\typeQp^{\freshfor s'}\right)}
\ar[r]^{\mathbf{str}^{\Gamma}_{\typeQp^{\freshfor s'}}}
&
\typelift{\left(\sem{\Gamma} \amp \typeQp^{\freshfor s'}\right)}
\ar[r]^(0.7){{!}\sem{t}}
&
\typelift\typeP
\ar[r]^{\epsilon_\typeP}
&
\typeP.
}
\]

Suppose that $\gamma \in \semp{\Gamma}$, $\lambda \in
\semp{\envfresh{\Lambda}{s'}}$, and \[\begin{array}{rcl} p &\in&
\sem{\tjudge{s}{\envcombine{\Gamma}{\envfresh{\Lambda}{s'}}}
{\matchz{s'}{u}{q}{x}{t}{\typeQp}}{\typeP}} \langle \gamma, \lambda
\rangle_{\envcombine{\Gamma}{\envfresh{\Lambda}{s'}}} \\ \rule{0pt}{4ex}&=&
\bigl(\epsilon_\typeP \circ {!}\sem{t} \circ
\mathbf{str}^{\Gamma}_{\typeQp^{\freshfor s'}} \circ (\mathbf{1}_{\Gamma} \amp
f)\bigr) \langle \gamma, \lambda
\rangle_{\envcombine{\Gamma}{\envfresh{\Lambda}{s'}}} \\ \rule{0pt}{4ex}&=&
\mathord{\bigcup} \bigl( {!}\sem{t} \bigl(
\mathbf{str}^{\Gamma}_{\typeQp^{\freshfor s'}} (\langle \gamma \rangle_{\Gamma}
\amp f\langle \lambda \rangle_{\envfresh{\Lambda}{s'}}) \bigr)\bigr) \\
\end{array}\] then there exists $P \in {!}\sem{t} \bigl(
\mathbf{str}^{\Gamma}_{\typeQp^{\freshfor s'}} (\langle \gamma \rangle_{\Gamma}
\amp f\langle \lambda \rangle_{\envfresh{\Lambda}{s'}}) \bigr)\bigr)$ such that
$p \in P$. By the definition of the ${!}$ functor, this means that $P$ is
chain-finite and there exists $Q_0 \in \mathbf{str}^{\Gamma}_{\typeQp^{\freshfor
s'}} (\langle \gamma \rangle_{\Gamma} \amp f\langle \lambda \rangle_{\envfresh{\Lambda}{s'}}) = s
\bigl(\eta_{\sem\Gamma} \langle \gamma \rangle_{\Gamma} \amp f \langle \lambda \rangle_{\envfresh{\Lambda}{s'}}
\bigr)$ such that $P \subseteq \sem{t}Q_0$, and hence $p \in \sem{t}Q_0$. By the
definition of $s$, this means that $Q_0 = Q_1 \udot Q_2$ where $Q_1 \in
\eta_{\sem\Gamma} \langle \gamma \rangle_\Gamma$ and $Q_2 \in f \langle \lambda
\rangle_{\envfresh{\Lambda}{s'}}$. Since $Q_1 \in \eta_{\sem\Gamma} \langle \gamma \rangle_\Gamma$, $Q_1
\subseteq \langle \gamma \rangle_\Gamma$, so that there exists $\gamma' \subseteq
\gamma$ such that $Q_1 = \langle \gamma' \rangle_\Gamma$. By monotonicity, this means
that $P \subseteq \sem{t}(\langle \gamma \rangle_\Gamma \udot Q_2)$. Also, since $Q_2
\in f \langle \lambda \rangle_{\envfresh{\Lambda}{s'}} = \widehat{\phi_{\typeQp}} \bigl( (\sem{q} \circ
\sem{u})^{\freshfor s'} \langle \lambda \rangle_{\envfresh{\Lambda}{s'}} \bigr)$ this means that
$\bigl(\phi_{\typeQp}^{-1} Q_2\bigr) \in \bigl(\sem{q} \circ
\sem{u}\bigr)^{\freshfor s'} \langle \lambda \rangle_{\envfresh{\Lambda}{s'}}
= \bigl\{ Q \in \sem{q} \circ \sem{u} \langle \lambda \rangle_{\Lambda} \mid Q
\freshfor s' \bigr\}$.

Letting $Q = \phi_{\typeQp}^{-1}Q_2$, this means that if $p \in
\sem{\tjudge{s}{\envcombine{\Gamma}{\envfresh{\Lambda}{s'}}}
{\matchz{s'}{u}{q}{x}{t}{\typeQp}}{\typeP}} \langle \gamma, \lambda
\rangle_{\envcombine{\Gamma}{\envfresh{\Lambda}{s'}}}$ then there exists $Q$
such that $p \in \sem{t} \langle \gamma, Q
\rangle_{\envcombine{\Gamma}{\envvarfresh{x}{\typeQp}{s'}}}$ and $Q \in
\bigl(\sem{q} \circ \sem{u}\bigr) \langle \lambda \rangle_{\Lambda}$ and $Q
\freshfor s'$.

\subsubsection{Function Abstraction}
%\infer{\tjudge{s}{\Gamma}{\abstract{x}{t}}{\typemap{\typeQ}{\typeP} }}
%{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{\varnothing} }}{t}{\typeP}} &&
Define $\sem{\tjudge{s}{\Gamma}{\abstract{x}{t}}{\typemap{\typeQ}{\typeP} }}$ to
be the exponential transpose of
$\sem{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{\varnothing}
}}{t}{\typeP}}$ in $\mathbf{FMCts}_s$.

Suppose that $\gamma \in \semp{\Gamma}$ and that $\mappath{Q}{p} \in
\sem{\abstract{x}{t}}\langle \gamma \rangle \subseteq \typemap{\typeQ}{\typeP} =
{\typelift\typeQ}^{\mathrm{op}} \times \typeP$, then by \ref{def:abstract} it
follows that $p \in \sem{t} \langle \gamma, Q \rangle$.




\subsubsection{Function Application}
Define $\sem{\tjudge{s}{\envcombine{\Gamma}{\Lambda}}{\apply{t}{u}{\typeQ}}{\typeP}}$ to
be \[\mathbf{apply} \circ (
\sem{\tjudge{s}{\Gamma}{t}{\typemap{\typeQ}{\typeP}}} \amp
\sem{\tjudge{s}{\Lambda}{u}{\typeQ}}),\] where $\mathbf{apply}$ is the counit of
the exponential adjunction in $\mathbf{FMCts}_s$.

Suppose that $\gamma \in \semp{\Gamma}$, $\lambda \in \semp{\Lambda}$ and
\[\begin{array}{rcl} p &\in&
\sem{\tjudge{s}{\envcombine{\Gamma}{\Lambda}}{\apply{t}{u}{\typeQ}}{\typeP}}
\langle \gamma, \lambda \rangle \\ &=& \bigl(\mathbf{apply} \circ (
\sem{\tjudge{s}{\Gamma}{t}{\typemap{\typeQ}{\typeP}}} \amp
\sem{\tjudge{s}{\Lambda}{u}{\typeQ}})\bigr) \langle \gamma, \lambda \rangle \\
&=& \mathbf{apply} \bigl(\sem{t}\langle \gamma \rangle \amp \sem{u} \langle
\lambda \rangle \bigr) \end{array}\] then there exists $Q \in \typelift\typeQ$
such that $Q \subseteq \sem{u}\langle \lambda \rangle$ and $\mappath{Q}{p} \in
\sem{t}\langle \gamma \rangle$ by \ref{def:apply}.

\subsubsection{Name Abstraction}
%\infer[(a \notin s)]
%{\tjudge{s}{\Gamma}{\new{a}{t}}{\typedelta \typeP}}
%{\tjudge{s \udot \{a\}}{\envfresh{\Gamma}{a}}{t}{\typeP}} &&
Define \[\sem{\tjudge{s}{\Gamma}{\new{a}{t}}{\typedelta \typeP}}
= \sem{\tjudge{s \udot \{a\}}{\envfresh{\Gamma}{a}}{t}{\typeP}}^{\vee}\]
where $(-)^{\vee}$ is the appropriate transposition in the adjunction
\ref{deltafreshadjcts}.
%
Let $b$ be a fresh name and let
\[\begin{array}{rcl}
\newpath{b}{p} &\in& \sem{\tjudge{s}{\Gamma}{\new{a}{t}}{\typedelta \typeP}}
\langle \gamma \rangle_\Gamma \\
&=& \sem{\tjudge{s}{\envfresh{\Gamma}{a}}{t}{\typeP}}^{\vee} \langle \gamma
\rangle_\Gamma\\
&=& \bigl(\theta_{\typeP} \circ \delta_a \sem{t} \circ
\theta_{\sem{\Gamma}^{\freshfor a}}^{-1} \circ
\widehat{\xi_{\sem{\Gamma}}}\bigr) \langle \gamma \rangle_\Gamma
\end{array}\]
by the definitions of \ref{subsubsect:deltafreshadjcts}.
%
Since $b$ is fresh, by the definition of $\theta$,
\[\begin{array}{rcl}
p &\in& \left(\bigl(\delta_a \sem{t} \circ \theta_{\sem{\Gamma}^{\freshfor
a}}^{-1} \circ \widehat{\xi_{\sem{\Gamma}}}\bigr) \langle \gamma \rangle_\Gamma \right)
\mathop{@} b \\
&=& \sem{(ab) \cdot t} \left(\left(\bigl(\theta_{\sem{\Gamma}^{\freshfor
a}}^{-1} \circ \widehat{\xi_{\sem{\Gamma}}}\bigr) \langle \gamma
\rangle_\Gamma \right) \mathop{@}b \right) \\
&=& \sem{(ab) \cdot t} \bigl\{ x \mid [b].x \in \widehat{\xi_{\sem{\Gamma}}} \langle \gamma
\rangle_\Gamma \bigr\} \\
&=& \sem{(ab) \cdot t} \bigl\{ x \in \langle \gamma \rangle \mid x \freshfor b \bigr\} \\
&=& \sem{(ab) \cdot t} \langle \gamma \rangle_{\envfresh{\Gamma}{b}}
\end{array}\]

\subsubsection{Name Application}
%\infer[(a \notin s)]
%{\tjudge{s \udot \{a\}}{\envfresh{\Gamma}{a}}{\newapply{t}{a}}{\typeP}}
%{\tjudge{s}{\Gamma}{t}{\typedelta \typeP}} \\
Define \[\sem{\tjudge{s \udot \{a\}}{\envfresh{\Gamma}{a}}{\newapply{t}{a}}{\typeP}}
= \sem{\tjudge{s}{\Gamma}{t}{\typedelta \typeP}}^{\wedge}\]
where $(-)^{\wedge}$ is the appropriate transposition in the adjunction
\ref{deltafreshadjcts}.
%
Let
\[\begin{array}{rcl}
p &\in& \sem{\tjudge{s \udot \{a\}}{\envfresh{\Gamma}{a}}{\newapply{t}{a}}{\typeP}}
\langle \gamma \rangle_{\envfresh{\Gamma}{a}} \\
&=& \sem{\tjudge{s}{\Gamma}{t}{\typedelta \typeP}}^{\wedge} \langle \gamma
\rangle_{\envfresh{\Gamma}{a}}\\
&=& \bigl(\widehat{\zeta_{\typeP}} \circ \phi_{\delta_a \typeP} \circ
\sem{t}^{\freshfor a} \circ \phi_{\sem{\Gamma}}^{-1}\bigr)
\langle \gamma \rangle_{\envfresh{\Gamma}{a}}\\
\end{array}\]
by the definitions of \ref{subsubsect:deltafreshadjcts}. Therefore
\[\begin{array}{rcl}
\newpath{a}{p} &\in& \bigl(\phi_{\delta_a \typeP} \circ
\sem{t}^{\freshfor a} \circ \phi_{\sem{\Gamma}}^{-1}\bigr) \langle \gamma
\rangle_{\envfresh{\Gamma}{a}}\\
&\subseteq& \bigl(\sem{t}^{\freshfor a} 
\circ \phi_{\sem{\Gamma}}^{-1}\bigr) \langle \gamma
\rangle_{\envfresh{\Gamma}{a}}\\
&=& \sem{t} \langle \gamma \rangle_{\Gamma}
\end{array}\]

\subsubsection{Labelling}
Define \[\sem{\tjudge{s}{\Gamma}{\linj{\ell_0}{t}}{\stdtypesum}} =
\mathbf{in}_{\ell_0} \circ \sem{\tjudge{s}{\Gamma}{t}{\typePsub{\ell_0}}},\]
where $\mathbf{in}_{\ell_0}$ is the $\ell_0$th injection of the biproduct
$\stdtypesum$, which 
is an arrow of $\mathbf{FMCts}_s$ since $s$ supports
$\ell_0$. Consequently $\labelpath{\ell}{p} \in
\sem{\tjudge{s}{\Gamma}{\linj{\ell_0}{t}}{\stdtypesum}} \langle\gamma\rangle$ iff $\ell = \ell_0$
and $p \in \sem{t} \langle\gamma\rangle$.

\subsubsection{Label Projection}
Define \[\sem{\tjudge{s}{\Gamma}{\lproj{\ell_0}{t}}{\typePsub{\ell_0}} } =
\mathbf{out}_{\ell_0} \circ \sem{\tjudge{s}{\Gamma}{t}{\stdtypesum}},\] where
$\mathbf{out}_{\ell_0}$ is the $\ell_0$th projection of the biproduct
$\stdtypesum$, which is an arrow of $\mathbf{FMCts}_s$ since $s$ supports
$\ell_0$. Consequently $p \in
\sem{\tjudge{s}{\Gamma}{\lproj{\ell_0}{t}}{\typePsub{\ell_0}} }
\langle\gamma\rangle$ iff
$\labelpath{\ell_0}{p} \in \sem{t} \langle\gamma\rangle$.

\subsubsection{Nondeterministic Sum}
%{\tjudge{s}{\Gamma}{\ndsum{i}{I}{t_i}}{\typeP}}
%{\tjudge{s_i}{\Gamma}{t_i}{\typeP} \qquad\text{each $i \in I$}} \\
Define \[\sem{\tjudge{s}{\Gamma}{\ndsum{i}{I}{t_i}}{\typeP}}
= \sum_{i \in I} \sem{\tjudge{s_i}{\Gamma}{t_i}{\typeP}},\] which is an
arrow of $\mathbf{FMCts}_s$ since $s$ supports the mapping $i \mapsto
\tjudge{s_i}{\Gamma}{t_i}{\typeP}$. Consequently $p \in
\sem{\tjudge{s}{\Gamma}{\ndsum{i}{I}{t_i}}{\typeP}} \langle\gamma\rangle$ iff $p \in
\sem{\tjudge{s_i}{\Gamma}{t_i}{\typeP}} \langle\gamma\rangle$ for some $i \in I$.

\subsubsection{Recursive Type Folding}
%{\tjudge{s}{\Gamma}{\abs t}{\typerec{j}{P}{\typeP} }}
%{\tjudge{s}{\Gamma}{t}{\typeP_j[\typerec{}{P}{\typeP}/\vec{P}]}} &&
Define \[\sem{\tjudge{s}{\Gamma}{\abs t}{\typerec{j}{P}{\typeP} }} =
\mathbf{abs} \circ
\sem{\tjudge{s}{\Gamma}{t}{\typeP_j[\typerec{}{P}{\typeP}/\vec{P}]}}\]
where $\mathbf{abs}$ is part of the canonical isomorphism between the type
$\typerec{j}{P}{\typeP}$ and its unfolding. Consequently $p \in \sem{t}
\langle\gamma\rangle$ iff
$\abspath p \in \sem{\abs t} \langle\gamma\rangle$.

\subsubsection{Recursive Type Unfolding}
%{\tjudge{s}{\Gamma}{\rep t}{\typeP_j[\typerec{}{P}{\typeP}/\vec{P}]}}
%{\tjudge{s}{\Gamma}{t}{\typerec{j}{P}{\typeP} }} 
Define \[\sem{\tjudge{s}{\Gamma}{\rep t}{\typeP_j[\typerec{}{P}{\typeP}/\vec{P}]}} =
\mathbf{rep} \circ
\sem{\tjudge{s}{\Gamma}{t}{\typerec{j}{P}{\typeP} }}\]
where $\mathbf{rep} = \mathbf{abs}^{-1}$ is part of the canonical isomorphism
between the type $\typerec{j}{P}{\typeP}$ and its unfolding. Consequently
$\abspath p \in \sem{t} \langle\gamma\rangle$ iff $p \in \sem{\rep t} \langle\gamma\rangle$.

\subsubsection{Support Weakening (Actions)} If $s' \subseteq s$ then let $j :
\mathbf{FMCts}_{s'} \hookrightarrow \mathbf{FMCts}_s$ be the canonical inclusion
so induced. Define \[\sem{\atjudge{s}{\typeP}{p}{\typePp}} =
j\sem{\atjudge{s'}{\typeP}{p}{\typePp}}\] from which it follows that
\[\sem{\atjudge{s}{\typeP}{p}{\typePp}} X =
\sem{\atjudge{s'}{\typeP}{p}{\typePp}} X.\]

\subsubsection{Prefix Action}
Define $\sem{\atjudge{\varnothing}{\typelift\typeP}{\bangaction}{\typeP}} =
\mathbf{1}_{\typelift\typeP}$, so that
$\sem{\atjudge{\varnothing}{\typelift\typeP}{\bangaction}{\typeP}} X = X$.

\subsubsection{Higher-Order Action}
Define 
\[\sem{\atjudge{s}{\typemap{\typeQ}{\typeP}}{\mapaction{u}{p}}{\typePp}}
= \sem{\atjudge{s}{\typeP}{p}{\typePp}} \circ \mathbf{apply} \circ
\bigl(\mathbf{1}_{\typemap{\typeQ}{\typeP}} \amp
\sem{\tjudge{s}{}{u}{\typeQ}}\bigr).\] Therefore
\[\begin{array}{rcl}
\multicolumn{3}{l}{
\sem{\atjudge{s}{\typemap{\typeQ}{\typeP}}{\mapaction{u}{p}}{\typePp}} X}\\
&=& \sem{\atjudge{s}{\typeP}{p}{\typePp}} \bigl(\mathbf{apply} \langle X, \sem{u}
\rangle\bigr) \\
&=& \sem{\atjudge{s}{\typeP}{p}{\typePp}} 
\{ x \in \typeP \mid \exists \text{ finite } Q \subseteq \sem{u}  \text{ such
that } \mappath{Q}{x} \in X \}.
\end{array}\]

\subsubsection{Labelled Action}
Define
\[\sem{\atjudge{s}{\stdtypesum}{\labelaction{\ell_0}{p}}{\typePp}}
= \sem{\atjudge{s}{\typePsub{\ell_0}}{p}{\typePp}} \circ \mathbf{out}_{\ell_0}.\] Therefore
\[\begin{array}{rcl}
\multicolumn{3}{l}{\sem{\atjudge{s}{\stdtypesum}{\labelaction{\ell_0}{p}}{\typePp}} X}\\
&=& \sem{\atjudge{s}{\typePsub{\ell_0}}{p}{\typePp}} \bigl( \mathbf{out}_{\ell_0} X\bigr) \\
&=& \sem{\atjudge{s}{\typePsub{\ell_0}}{p}{\typePp}} \{x \in \typePsub{\ell_0}
\mid \labelpath{\ell_0}{x} \in X\}.
\end{array}\]

\subsubsection{New Name Action}
If $a \notin s$ then define \[\sem{\atjudge{s}{\typedelta\typeP}{\newaction{a}{p}}{\typedelta\typePp}}
= \widehat{\theta^{!}_{\typePp}} \circ \theta_{\typelift\typePp}
\circ \delta_a \sem{\atjudge{s \udot \{a\}}{\typeP}{p}{\typePp}} \circ
\theta^{-1}_{\typeP}.\] Therefore
\[\begin{array}{rcl}
\multicolumn{3}{l}{\sem{\atjudge{s}{\typedelta\typeP}{\newaction{a}{p}}{\typedelta\typePp}} X} \\
&=& \bigl(\widehat{\theta^{!}_{\typePp}} \circ \theta_{\typelift\typePp}
\circ \delta_a \sem{p} \circ
\theta^{-1}_{\typeP}\bigr) X \\
&=& \bigl(\widehat{\theta^{!}_{\typePp}} \circ \theta_{\typelift\typePp}
\circ \delta_a \sem{p} \bigr)
\bigl(\freshin{b}{[b].\{x \mid \newpath{b}{x}
\in X\}}\bigr) \\
&=& \bigl(\widehat{\theta^{!}_{\typePp}} \circ \theta_{\typelift\typePp} \bigr)
\bigl(\freshin{b}{[b].  \sem{(ab) \cdot p}
\{x \mid \newpath{b}{x} \in X\}}\bigr) \\
&=& \widehat{\theta^{!}_{\typePp}} 
\{Y \mid \freshin{b}{Y @ b \in \sem{(ab) \cdot p}
\{x \mid \newpath{b}{x} \in X}\}\} \\
&=& \{\theta^{!}_{\typePp}Y \mid \freshin{b}{
Y @ b \in \sem{(ab) \cdot p} \{x \mid \newpath{b}{x} \in X}\}\}_{\downarrow} \\
\end{array}\]

\subsubsection{Recursive Type Action}
Define
\[\sem{\atjudge{s}{\typerec{j}{P}{\typeP}}{\absaction{p}}{\typePp}}
= \sem{\atjudge{s}{\typeP_j[\typerec{}{P}{\typeP}/\vec{P}]}{p}{\typePp}}
\circ \mathbf{rep}.\]
Therefore
\[\begin{array}{rcl}
\multicolumn{3}{l}{\sem{\atjudge{s}{\typerec{j}{P}{\typeP}}{\absaction{p}}{\typePp}} X} \\
&=& \sem{\atjudge{s}{\typeP_j[\typerec{}{P}{\typeP}/\vec{P}]}{p}{\typePp}}
\bigl(\mathbf{rep} X\bigr)\\
&=& \sem{\atjudge{s}{\typeP_j[\typerec{}{P}{\typeP}/\vec{P}]}{p}{\typePp}}
\{x \in \typeP_j[\typerec{}{P}{\typeP}/\vec{P}] \mid \abspath{x} \in X\}.
\end{array}\]

%%
%&&
%%
%\infer
%{\atjudge{s}{\typemap{\typeQ}{\typeP}}{\mapaction{u}{p}}{\typePp}}
%{\atjudge{s}{\typeP}{p}{\typePp} & \tjudge{s}{}{u}{\typeQ}}
%%
%\\
%\rule{0pt}{7ex}
%%
%\infer
%{\atjudge{s}{\stdtypesum}{\labelaction{\ell_0}{p}}{\typePp}}
%{\atjudge{s}{\typePsub{\ell_0}}{p}{\typePp}}
%%
%&&
%%
%\infer
%{\atjudge{s}{\typerec{j}{P}{\typeP}}{\absaction{p}}{\typePp}}
%{\atjudge{s}{\typeP_j[\typerec{}{P}{\typeP}/\vec{P}]}{p}{\typePp}}
%%
%\\
%\rule{0pt}{7ex}
%%
%\infer[(a \notin s)]
%{\atjudge{s}{\typedelta\typeP}{\newaction{a}{p}}{\typedelta\typePp}}
%{\atjudge{s \udot \{a\}}{\typeP}{p}{\typePp}}
%%
%&&
%\infer[(s' \subseteq s)]
%{\atjudge{s}{\typeP}{p}{\typePp}}
%{\atjudge{s'}{\typeP}{p}{\typePp}}
%\end{array}\]


%\subsubsection{Actions}

%Typing judgements $\atjudge{\typeP}{p}{\typePp}$ are denoted by linear
%maps $\sem{\atjudge{\typeP}{p}{\typePp}} : \typeP \to
%\typelift\typePp$ as defined below. Usually the type information is clear, and then
%$\sem{\atjudge{\typeP}{p}{\typePp}}$ is abbreviated to $\sem{p}$.

%\[\infer{\sem{\bangaction} = \mathbf{1}_{\typelift\typeP}: \typelift\typeP \longrightarrow
%\typelift\typeP}{-}\]

%\[\infer{\sem{\mapaction{u}{p}} = \sem{p} \circ \mathrm{app}^{\&} \circ
%\bigl(\mathbf{1}_{\typemap{\typeQ}{\typeP}} \mathop{\&} \sem{u}\bigr): \typemap{\typeQ}{\typeP} \longrightarrow
%\typelift\typePp}
%{\sem{p} : \typeP \longrightarrow \typelift\typePp & \sem{u} : \typeO \longrightarrow \typeQ}
%\]

%\[\infer{\sem{\labelaction{\ell_0}{p}} = \sem{p} \circ \pi_{\ell_0}:
%\stdtypesum \longrightarrow
%\typelift\typePp}
%{\sem{p} : \typePsub{\ell_0} \longrightarrow \typelift\typePp}\]

%\[\infer{\sem{\absaction{p}} = \sem{p} \circ \mathrm{rep}:
%\typerec{j}{P}{\typeP} \longrightarrow \typelift\typePp}
%{\sem{p} : \typeP_j[\typerec{}{P}{\typeP}/\vec{P}] \longrightarrow \typelift\typePp}\]

%\[\infer{\sem{\newaction{a}{p}} = \widehat{\psi} \circ \theta \circ \delta_a
%\sem{p} : \typedelta\typeP \longrightarrow \typelift{\typedelta\typePp}}
%{\sem{p} : \typeP \longrightarrow \typelift\typePp}\]

%\subsubsection{Useful Characterisations}

%\[ x \in \sem{\new{a}{t}} (\bar{\gamma})
%\qquad \Leftrightarrow \qquad \text{for some/any $a'$, } x@a' \in \sem{(a a')
%\cdot t} (\bar{\gamma}) \]

%\[ x \in \sem{\newapply{t}{a}} (\bar{\gamma})
%\qquad \Leftrightarrow \qquad [a]x \in \sem{t} (\bar{\gamma}) \text{ and } a
%\freshfor \bar{\gamma} \]

%\[ x \in \sem{\newaction{a}{p}} (y)
%\qquad \Leftrightarrow \qquad \text{for some/any $a'$, }
%\bigl(\psi^{-1}(x')\bigr)@a \in \sem{p} (y' @ a) \]
%where $(x', y') = (a a') \cdot (x, y)$.

% vim: set filetype=tex foldlevel=0 cms=\%%s nowrap tw=80:
