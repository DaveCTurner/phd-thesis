\TODO{Intro}

\subsection{Complete Partial Orders and Continuous Functions}

A \textit{domain} --- in the sense of domain theory --- is an ordered structure
with some appropriate completeness property.
%
The elements of a domain can be viewed as representing computations, and the
order on a domain represents increasing computational information, information
which can be represented as a limit of approximations.
%
A simple notion of approximation is by sequences of the form \begin{equation}
d_0 \sqsubseteq d_1 \sqsubseteq \ldots \sqsubseteq d_n \sqsubseteq \ldots.
\end{equation}
%
This gives rise to the following candidate for a suitable collection of domains.
%
\begin{definition} An \define{$\omega$-complete partial order ($\omega$CPO)} is
a partial order $\langle D, \sqsubseteq_{D} \rangle$ that has joins of all
increasing $\omega$-chains in $D$.\end{definition}

A more general notion of convergence is to consider approximation by a
directed sets.
%
\begin{definition} A \define{complete partial order (CPO)} is a
partial order $\langle D, \sqsubseteq_{D} \rangle$ that has
joins of all directed subsets of $D$.\end{definition}

Whichever completeness property is chosen, it is chosen to capture an
appropriate notion of approximation of elements of $D$ by some kind of limiting
process of the appropriate shape.
%
It is important here to emphasise that the choice of a suitable notion of
approximation is a key variable in the development of domain theory, so it is
worth making the following definition.

\begin{definition} Write $\Phi_d$ for the property of directedness and
$\Phi_\omega$ for the property of being an $\omega$-chain.\end{definition}
%
$\Phi_d$ and $\Phi_\omega$ capture the two notions of approximation that have
been introduced so far.
%
It turns out that elementary domain theory is somewhat independent of the choice
of any particular notion of approximation, in which case the chosen notion of
approximation can be written simply as $\Phi$.
%
This generality is important when working in the theory of nominal sets (the
setting for much of the rest of this dissertation) since it helps to capture the
salient features of the development of domain theory that are independent of any
particular notions of approximation.
%
Indeed, neither $\Phi_d$ nor $\Phi_\omega$ fully capture an appropriate notion
of approximation in the theory of nominal sets and it is necessary to use a
subtly different notion instead.
%
It would perhaps be desirable to have an axiomatisation for the features that a
property $\Phi$ must have in order to make it a suitable choice for a notion of
approximation but investigating such an axiomatisation is beyond the scope of
this thesis.
%
Instead, it is sufficient to think of $\Phi$ as being either $\Phi_d$ or
$\Phi_\omega$ in the following, and when introducing approximations in nominal
set theory in \ref{fmcts} the mathematics is developed from scratch using this
section as a guide.


\begin{definition} A \define{$\Phi$-complete partial order
($\Phi$CPO)} is a partial order $\langle D, \sqsubseteq_{D} \rangle$ that has
joins of subsets of $D$ that have the property $\Phi$.  \end{definition}


The property $\Phi$ also gives rise to a notion of $\Phi$-continuous function.
%
\begin{definition} \begin{equation} f : \langle D, \sqsubseteq_D \rangle \to
\langle E, \sqsubseteq_E \rangle \end{equation} is \define{$\Phi$-continuous} if
it is a function $f : D \to E$ that preserves \begin{itemize} \item the ordering
$\sqsubseteq$ (i.e.  it is monotone) \item the property of $\Phi$-ness (i.e. if
$x \subseteq D$ is $\Phi$ then so is $\{f d \mid d \in x\}$), and \item joins of
$\Phi$ subsets of $D$ (i.e. if $x \subseteq D$ is $\Phi$ then $f \bigl(\bigvee x
\bigr) = \bigvee \{ f d \mid d \in x\}$.  \end{itemize} \end{definition}
%
The collection of $\Phi$CPOs and $\Phi$-continuous functions form a category
$\mathbf{\Phi CPO}$.
%
If $\Phi \in \{\Phi_d, \Phi_\omega\}$ then the category $\mathbf{\Phi CPO}$ is
cartesian closed.
%
The cartesian product is given by the product of the underlying sets ordered
pointwise, and the exponential is given by the space of $\Phi$-continuous
functions, again ordered pointwise.
%
This is important for giving denotational semantics to a language with
higher-order functions.

\begin{definition} If $\typeP$ is a preorder and $x \subseteq \typeP$ then
define \[ x_\downarrow \defeq \{ p' \mid
\exists p \in x. p' \le_\typeP p \}. \]
Say that $x' \subseteq \typeP$ is a \define{lower set in $\typeP$} if it
is of the form $x_\downarrow$ for some $x \subseteq \typeP$.
\end{definition}

\begin{definition} A \define{$\Phi$-ideal} in the preorder $\typeP$ is the lower
set of a $\Phi$ subset of $\typeP$.
%
In other words, it is a set of the form $x_\downarrow$ where $x \subseteq
\typeP$ has the property $\Phi$.
%
The \define{$\Phi$-ideal completion} of $\typeP$, written
$\mathrm{Idl}_{\Phi}(\typeP)$, is the set of all $\Phi$-ideals of $\typeP$
ordered by inclusion.
%
\end{definition}

The $\Phi$-ideal completion of a preorder $\typeP$ is a $\Phi$CPO with joins
given by union.

\subsection{Algebraic CPOs}

Certain elements of a $\Phi$CPO $D$ cannot be reached by the join of a
succession of increasingly close proper approximations and such elements are
called \textit{isolated}\footnote{The terms \textit{compact} and \textit{finite}
are also used in the literature, but this discussion consistently uses
\textit{isolated}.}.
%
Computationally, the isolated elements of $D$ correspond to those computations
that can be realised in finite time.

\begin{definition} An element $d$ of the $\Phi$CPO $\langle D, \sqsubseteq_D
\rangle$ is \define{$\Phi$-isolated} if whenever $d \sqsubseteq_D \bigvee
x$ for some $x \subseteq D$ satisfying $\Phi$ it follows that there exists $d'
\in x$ such that $d \sqsubseteq_D d'$.
%
The collection of all $\Phi$-isolated elements of $D$ is written $D^{\circ}$.
\end{definition}

If a $\Phi$CPO consists entirely of elements that can be approximated by its
$\Phi$-isolated elements then its structure is considerably simplified.
%
Those $\Phi$CPOs that consist only of such approximable elements are called
\textit{algebraic}:
%
\begin{definition} A $\Phi$CPO $D$ is \define{algebraic} if for every $d \in D$
there exists an $x \subseteq D^\circ$ which is both $\Phi$ and such that $d =
\bigvee x$. \end{definition}
%
Sometimes algebraicity also includes a constraint on the size of $D$ --- for
example it may insist that that $D^\circ$ is countable --- but this point is not
dwelt upon here\footnote{
%
In fact, much of this dissertation works within the theory of nominal sets, and
in this theory the notion of cardinality is subtle because of the failure of the
Axiom of Choice.
%
For example, lemma \ref{lemma:fm:totalorder} implies that any (internally)
countable nominal set is discrete and therefore not particularly interesting for
the purposes of this discussion.}.
%
Importantly, the isolated elements of an algebraic $\Phi$CPO determine its
structure precisely, as the following lemma shows.

\begin{lemma} \label{alg-ideal-completion}
If $\langle D, \sqsubseteq_D \rangle$ is an algebraic $\Phi$CPO then $D \cong
\mathrm{Idl}_{\Phi}(D^\circ)$.
\end{lemma}

\begin{proof} If $d \in D$ then by algebraicity of $D$ there exists $x \subseteq
D^{\circ}$ which is $\Phi$ and such that $d = \bigvee x$, so define $f(d) =
x_\downarrow \in \mathrm{Idl}_{\Phi}(D^{\circ})$.
%
To see that this is well-defined let $x' \subseteq D^{\circ}$ be $\Phi$ and such
that $d = \bigvee x'$.
%
If $d_1 \in x'_\downarrow$ then there exists $d_2 \in x'$ such that $d_1
\sqsubseteq_D d_2$, but $d = \bigvee x'$ so that $d_1 \sqsubseteq_D d_2
\sqsubseteq d = \bigvee x$ and $d_1$ is $\Phi$-isolated so there exists $d_3 \in
x$ such that $d_1 \sqsubseteq_D d_3$ and hence $d_1 \in x_\downarrow$.
%
This shows that $x'_\downarrow \subseteq x_\downarrow$ and the converse is
similar.

If $I \in \mathrm{Idl}_{\Phi}(D^{\circ})$ then by definition there exists $x
\subseteq D^{\circ}$ which is $\Phi$ and such that $I = x_\downarrow$, so define
$g(I) = \bigvee x$.
%
To see that this is well-defined let $x' \subseteq D^{\circ}$ be $\Phi$ and such
that $I = x'_\downarrow$.
%
If $d \in x \subseteq I = x'_\downarrow$ then there exists $d' \in x'$ such that
$d \sqsubseteq_D d'$, so that $\bigvee x \sqsubseteq_D \bigvee x'$ and the
converse is similar.
%
It is now straightforward to show that $f$ and $g$ define an isomorphism $D
\cong \mathrm{Idl}_{\Phi}(D^\circ)$ as required.
%
\end{proof}

Also if $f : D \to E$ is $\Phi$-continuous and $D$ is algebraic then $f$ is
entirely specified by its action on $D^\circ$ as the following lemma shows.

\begin{lemma} \label{alg-cts-isolated} Let $\langle D, \sqsubseteq_D \rangle$ be
an algebraic $\Phi$CPO and let \[ f, g : \langle D, \sqsubseteq_D \rangle
\rightrightarrows \langle E, \sqsubseteq_E \rangle \] be two arrows of
$\mathbf{\Phi CPO}$ such that $f(d) = g(d)$ for every $d \in D^\circ$.  Then $f
= g$.  \end{lemma}

\begin{proof} Let $d \in D$, then by the algebraicity of $D$ there exists $x
\subseteq D^\circ$ which is both $\Phi$ and such that $d = \bigvee x$. Therefore
\begin{equation} \begin{array}[t]{rcll} f(d) &=& f \bigl( \bigvee x \bigr) \\
%
&=& \bigvee \{ f(d') \mid d' \in x \} & \text{by continuity of $f$}\\
%
&=& \bigvee \{ g(d') \mid d' \in x \} & \text{since $f$ and $g$ agree on
$D^\circ \supseteq x$}\\
%
&=& g \bigl(\bigvee x \bigr) & \text{by continuity of $g$} \\
%
&=& g(d) \end{array} \end{equation} as required. \end{proof}

The collection of algebraic $\Phi$CPOs and $\Phi$-continuous functions forms a
category $\mathbf{\Phi Alg}$ and much of the structure of $\mathbf{\Phi CPO}$
restricts to $\mathbf{\Phi Alg}$.
%
For example, the cartesian product of a pair of algebraic $\Phi$CPOs (as objects
of $\mathbf{\Phi CPO}$) is again an algebraic $\Phi$CPO.
%
However if $D$ and $E$ are $\Phi$-algebraic then it is not necessarily the case
that the function space $D \to E$ is $\Phi$-algebraic, and $\mathbf{\Phi Alg}$
is not cartesian closed.
%
Fortunately $\mathbf{\Phi Alg}$ contains cartesian closed subcategories that are
suitable settings for denotational semantics.
%
One such setting is the collection of Scott domains, which are those algebraic
$\Phi$CPOs where every \textit{bounded} $\Phi$-subset has a join.
%
Another is the collection of \textit{strongly finite} or SFP
objects\cite{plotkin:powerdomains}.

A strengthening of the concept of isolation is that of primality.
%
An element in a $\Phi$CPO is (completely) prime if it cannot be properly
decomposed as a join of any shape.
%
The associated concept of algebraicity is that every element of the $\Phi$CPO
can be approximated entirely by primes, as follows.

\begin{definition} \label{def:prime} An element $d$ of the $\Phi$CPO $\langle D,
\sqsubseteq_D \rangle$ is \define{completely prime} if whenever $d \sqsubseteq_D
\bigvee x$ for any $x \subseteq D$ for which $\bigvee x$ exists it follows that
there exists $d' \in x$ such that $d \sqsubseteq_D d'$.
%
A $\Phi$CPO $\langle D, \sqsubseteq_D \rangle$ is \define{prime algebraic} if
for every $d \in D$ there exists $x \subseteq \{ d' \in D \mid \text{ $d'$
completely prime} \}$ such that $d = \bigvee x$.  \end{definition}
%
Sometimes completely prime elements are called simply `prime'.

\subsection{Nondeterminism in Domain Theory}

In order to capture a denotational semantics for nondeterministic choice, it is
possible to extend the notion of a $\Phi$CPO with a binary operation $\sqcup$
representing the nondeterministic sum of a pair of computations.
%
There are a number of possible axiomatisations of the operation $\sqcup$
depending on the style of nondeterminism that is under study.

\begin{definition} A \define{Plotkin-nondeterministic $\Phi$CPO}
($\text{N}_P\Phi\text{CPO}$) is a $\Phi$CPO $\langle D, \sqsubseteq_D \rangle$
together with an idempotent, commutative and associative binary operation
$\mathord{\sqcup}_D : D \times D \to D$.

A \define{Hoare-nondeterministic $\Phi$CPO} ($\text{N}_H\Phi\text{CPO}$) is
a Plotkin-non\-det\-er\-min\-istic $\Phi$CPO $\langle D, \sqsubseteq_D,
\mathord{\sqcup}_D \rangle$ such that additionally $d \sqsubseteq_D d \sqcup_D
d'$ for all $d, d' \in D$.

A \define{Smyth-nondeterministic $\Phi$CPO} ($\text{N}_S\Phi\text{CPO}$) is a
Plotkin-non\-det\-er\-min\-istic $\Phi$CPO $\langle D, \sqsubseteq_D,
\mathord{\sqcup}_D \rangle$ such that additionally $d \sqcup_D d' \sqsubseteq_D
d$ for all $d, d' \in D$.  \end{definition}

Intuitively, the Hoare-style nondeterminism captures a `may do' semantics: a
nondeterministic sum of two computations contains at least as much information
as each of the summands, because it may produce the output of either.
%
Conversely, the Smyth-style nondeterminism captures a `must do' semantics: fewer
guarantees can be made about the nondeterministic sum of two computations, so
the sum contains less information.
%
The Plotkin-style nondeterminism captures a mixture of both the `may do' and
`must do' styles of semantics.
%
When the discussion is not concerned with the differences between the styles of
nondeterminism, it is enough to refer to $\text{N}_P\Phi\text{CPOs}$,
$\text{N}_H\Phi\text{CPOs}$ and $\text{N}_S\Phi\text{CPOs}$ simply as
N$\Phi$CPOs.

The natural morphisms between N$\Phi$CPOs are $\Phi$-continuous functions that
are additionally $\sqcup$-homomorphisms, and these objects and morphisms form a
category $\mathbf{N\Phi CPO}$ with the obvious forgetful functor $U :
\mathbf{N\Phi CPO} \to \mathbf{\Phi CPO}$.
%
Furthermore this functor has a left adjoint $F$ associating to each $\Phi$CPO
$D$ the object $FD$ which is the free N$\Phi$CPO on $D$.
%
The composition $UF : \mathbf{\Phi CPO} \to \mathbf{\Phi CPO}$ is usually called
the \textit{powerdomain monad} and is often written simply $\mathcal{P}$.

A similar story unfolds when attention is restricted to algebraic $\Phi$CPOs.
%
Nondeterministic algebraic $\Phi$CPOs are defined similarly to more general
nondeterministic CPOs, and together with $\Phi$-continuous
$\sqcup$-homomorphisms they form a category $\mathbf{N\Phi Alg}$ with a
forgetful/free adjunction $F \dashv U : \mathbf{N\Phi Alg} \leftrightarrows
\mathbf{\Phi Alg}$ as before.
%
An advantage of restricting attention to algebraic $\Phi$CPOs is that the
powerdomain monad becomes a little easier to describe concretely in this
setting.
%
For example, if $D$ is an algebraic $\Phi_d$CPO then there is an associated
preorder ${!}(D^{\circ})$ whose elements comprise the finite subsets of
$D^\circ$ and whose order is defined by setting $x \le_{{!}(D^{\circ})} x'$ iff
for all $d \in x$ there exists $d' \in x'$ such that $d \sqsubseteq_D d'$.
%
The Hoare powerdomain $\mathcal{P}_{H} D$ is then given as the $\Phi_d$-ideal
completion of ${!}(D^{\circ})$.
%
Alternatively, $\mathcal{P}_{H} D$ can be characterised as the collection of
lower subsets of $D^{\circ}$ ordered by inclusion.




\subsection{A Simple Domain Theory for Concurrency} \label{subsect:simple-dtfc}

Dropping some of the generality developed above, in the following consider just
the notion of approximation given by directedness by letting $\Phi = \Phi_d$ and
just the Hoare `may do' style of nondeterminism.
%
Viewing nondeterminism as a computational effect (in the style of Moggi
\cite{moggi:monads}) draws attention to the Kleisli category of
$\mathcal{P}_{H}$ which, it turns out, is equivalent to the category
$\mathbf{PreRel}$ of preorders $\typeP, \typeQ, \ldots$ and monotone
relations between them.
%
In other words, an arrow $R : \typeP \to \typeQ$ is a relation $R \subseteq
\typeP \times \typeQ$ such that if $p' \le_{\typeP} p \mathrel{R} q \le_{\typeQ}
q'$ then $p' \mathrel{R} q'$.
%
Composition in $\mathbf{PreRel}$ is straightforward relational composition, and
the identity relation on the preorder $\typeP$ is simply $\le_{\typeP}$.

Concretely the equivalence $\mathrm{Kl}(\mathcal{P}_{H}) \simeq \mathbf{PreRel}$
factorises the monad $\mathcal{P}_{H}$ as \begin{equation} \xymatrix{
\mathbf{\Phi}_d \mathbf{Alg} \ar@/^2ex/@<-2pt>[rr]^{{!}((-)^{\circ})} & \bot &
\mathcal{\mathbf{PreRel}} \ar@/^2ex/@<-2pt>[ll]^{\mathrm{Idl}_{\Phi_d}} }
\end{equation} where the functor $\mathrm{Idl}_{\Phi_d}$ takes a preorder to its
$\Phi_d$-ideal completion and ${!}((-)^{\circ})$ takes an algebraic domain to
the preorder of finite sets of its $\Phi_d$-isolated elements (with the order as
described above).

The category $\mathbf{PreRel}$ is isomorphic to the category $\mathbf{Lin}$ of
preorders and join preserving (or \textit{linear}) maps. 
%
More precisely, each preorder $\typeP$ can be freely completed with all joins to
form the partial order $\widehat{\typeP}$ and then an arrow $f : \typeP \to
\typeQ$ of $\mathbf{Lin}$ is a function $f : \widehat{\typeP} \to
\widehat{\typeQ}$ which preserves all joins.
%
Concretely, $\widehat{\typeP}$ consists of all lower subsets of $\typeP$ ordered
by inclusion.
%
Considering the adjunction ${!}((-)^{\circ}) \dashv \mathrm{Idl}_{\Phi_d}$ from
the point of view of $\mathbf{PreRel}$ or $\mathbf{Lin}$ draws attention to the
comonad ${!}((\mathrm{Idl}_{\Phi_d}(-))^{\circ}) \cong {!}$.

\subsection{Domains of Paths} \label{domains-of-paths}

The semantic setting discussed above can be approached more directly by taking
the intuition that a nondeterministic process denotes the set of computation
paths that it may follow.
%
A brief overview of this approach is below, but much more detail is available
elsewhere\cite{nygaardwinskel1}.
%
The objects $\typeP$, $\typeQ$, $\ldots$ of $\mathbf{Lin}$ take the role of
domains of paths (ordered by extension) which can be used as a type system for
nondeterministic processes.
%
More precisely, nondeterministic processes of type $\typeP$ denote subsets of
$\typeP$.
%
Furthermore, within the Hoare-style `may do' semantics if a process can perform
some path then it can also perform any shorter path, so that processes of type
$\typeP$ denote \textit{lower} subsets of $\typeP$.
%
In other words $\widehat{\typeP}$ can be thought of as a domain of meanings for
processes of type $\typeP$.

As $\widehat{(-)}$ takes a preorder to its free join-completion, it is natural
to consider the join-preserving (i.e. linear) maps between freely join-completed
structures, but the linear maps are too restrictive a class of maps for a rich
domain theory.
%
In particular, since they preserve all joins they preserve the empty join, so
that a process that receives no input cannot spontaneously perform any output.
%
It is better to turn attention to a collection of maps that preserve some
smaller class of joins: perhaps nonempty joins or perhaps only directed joins.
%
Nonempty-join-preserving maps are also known as \textit{affine} and form a
category $\mathbf{Aff}$, whereas directed-join-preserving maps could be called
\textit{continuous} and form a category $\mathbf{Cts}$.

From a different viewpoint it turns out that $\mathbf{Lin}$ can be used as a
setting for a fragment of Girard's classical linear logic, and following the
discipline of linear logic it would seem that the solution to the strictness of
linearity is to consider those maps whose domain is under an exponential.
%
$\mathbf{Aff}$ can be seen to be the coKleisli category of the comonad $(-)_\bot
: \mathbf{Lin} \to \mathbf{Lin}$ which takes a preorder $\typeP$ to $\typeP_\bot
= \typeP \uplus \{\bot\}$ where the new element $\bot$ is ordered below each
element of $\typeP$.
%
$\mathbf{Aff}$ then forms a model of affine-linear
logic\cite{jacobs:weakening-contraction}.
%
On the other hand, $\mathbf{Cts}$ can be seen to be the coKleisli category of
the comonad ${!} : \mathbf{Lin} \to \mathbf{Lin}$ introduced in the previous
section.
%
$\mathbf{Cts}$ then forms a model of multiplicative-exponential linear
logic\cite{benton:linear}, with $!$ taking the role of the exponential.

It is in the setting of $\mathbf{Cts}$ that Winskel and
Nygaard\cite{nygaardwinskel1} have developed a simple domain theory that
captures certain important computational features.
%
In detail, \begin{itemize} \item $\mathbf{Cts}$ is cartesian closed and
therefore supports higher-order computations.
%
\item Its hom-sets are richly equipped with joins and therefore $\mathbf{Cts}$
supports recursively-defined processes and nondeterministic sums.
%
\item The operation $!$ gives rise to a primitive observable action. A richer
structure of actions is supported by means of labelling.  \end{itemize}
%
Perhaps of the greatest importance is that all of this structure is given
universally, rather than by ad-hoc definition.
%
That said, the domain theory based in $\mathbf{Cts}$ is no panacea.
%
In particular because the semantics is based on a simple-minded notion of paths
it equates processes that sometimes would be best kept separate.
%
For example, the terms $t_1 \defeq a.a.\inactive$ and $t_2 \defeq a.\inactive +
a.a.\inactive$ (in a CCS-like process calculus) both denote the path set
$\{\epsilon, a, a.a\}$ despite the fact that $t_1$ and $t_2$ are not bisimilar.
%
A possible remedy is as follows: $\widehat{\typeP}$ can be seen as the space of
characteristic functions $\typeP^{\mathrm{op}} \to \mathbf{2}$ where
$\mathbf{2}$ is the nontrivial poset on the two-element set $\{ \top, \bot \}$
of truth values.
%
Intuitively, $\top$ and $\bot$ correspond to \textit{whether} a path was
realised or not.
%
Replacing $\mathbf{2}$ with some larger collection of truth values opens the way
to thinking about \textit{how} a path may be realised.
%
In the case of $t_2$ above, the path $a$ could be realised in two different
ways, one for each component of the sum, whereas $t_1$ can only realise $a$ in
one way.
%
Taking this idea sufficiently far suggests that $\mathbf{2}$ could be replaced
by the category $\mathbf{Set}$; viewing each $\typeP$ as a small category then
gives a domain theory in terms of presheaves $\typeP^{\mathrm{op}} \to
\mathbf{Set}$ with much finer-grained distinctions than is possible with the
simple-minded path semantics.
%
Cattani and Winskel\cite{cattaniwinskel1} developed this presheaf-based
semantics with later work by Nygaard\cite{nygaard:phdthesis}.

Also absent from the path-based semantics in $\mathbf{Cts}$ is the concept of
name-generation.
%
In order to model a fully-fledged process algebra such as the $\pi$-calculus it
is necessary to be able to model locally-scoped names and treat them as
first-class data that can, for example, be passed from process to process.
%
Winskel and Zappa Nardelli\cite{WZ04} developed the language new-HOPLA in which
this was possible.
%
This language was based on a sketch of a denotational semantics given in the
functor category $\mathbf{Lin}^{\mathbb I}$ --- where $\mathbb I$ is the
category of injections between finite sets of names --- following the ideas of
Pitts and Stark\cite{?}, Fiore\cite{?}, Moggi\cite{?} and Oles\cite{?} amongst
others.
%
The use of $\mathbf{Lin}^{\mathbb I}$ rather than $\mathbf{Lin}$ facilitates a
semantics that is parametric in the `current' set of names.
%
However there are some technical problems in the associated domain theory,
particularly regarding the existence of function spaces.
%
This thesis aims to overcome such problems by avoiding the technical machinery
of functor categories and working in a more elementary setting.
%
The following section introduces the theory of nominal sets, which provides a
suitable situation for a name-theoretic domain theory for concurrency.

% vim: set filetype=tex foldlevel=0 cms=\%%s nowrap tw=80:
