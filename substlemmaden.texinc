\begin{lemma}[Semantic Substitution Lemma]\label{semsubstitutionlemma} Suppose that
$\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{y}{\typeR}{r}
}}{t}{\mathbb P}$ and $\tjudge{s_1}{\Delta}{v}{\mathbb R}$ where $s_1 \cap r = \varnothing$
and $\dom\Gamma \cap \dom\Delta = \varnothing$.
Let $i_1 : s_1 \udot r \hookrightarrow s \cup s_1$ and $i_2 : s \hookrightarrow s \cup s_1$.
Then
\[\sem{\tjudge{s \cup s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r} }}{\termsubst{t}{v}{y}}{\mathbb P}} =
	i_2^* \sem{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{y}{\typeR}{r} }}{t}{\mathbb P}}
	\circ \bigl(\mathbf{1}_{\Gamma} \amp i_1^* \sem{\tjudge{s_1}{\Delta}{v}{\mathbb R}}^{\# r} \bigr)\]\end{lemma}

% Proof of Substitution Lemma {{{
\begin{proof} The proof is by induction over the typing rules.  As with the
proof of lemma \ref{substitutionlemma}, in the presence of exchange and
contraction the induction hypothesis must be strengthened as follows.

Suppose that $\tjudge{s}{\Gamma'}{t}{\typeP}$,
$\tjudge{s_1}{\Delta}{v}{\typeR}$, and $\Gamma'$ is a reordering of the
environment $\Gamma, \envvarfresh{y1}{\typeR}{r_1}, \ldots,
\envvarfresh{yn}{\typeR}{r_n}$, and represent this reordering by the
isomorphism $\sigma : \Gamma \amp \typeR^{\freshfor r_1} \amp \ldots \amp
\typeR^{\freshfor r_n} \to \Gamma'$. Let $r = r_1 \cup \ldots \cup r_n$.
Suppose also that $\dom\Gamma \cap \dom\Delta = \varnothing$ and that $s_1 \cap
r = \varnothing$. Define \[\sem{v}^n = (j^*_1 \amp \ldots \amp j^*_n) \circ
\Delta^n_{\typeR^{\freshfor r}} \circ
\sem{\tjudge{s_1}{\Delta}{v}{\typeR}}^{\freshfor r} : \Delta^{\freshfor r} \to
\typeR^{\freshfor r_1} \amp \ldots \amp \typeR^{\freshfor r_n}\] where $j_i :
r_i \hookrightarrow r$ for each $i$.  The clash of $\Delta$s in the notation is
unfortunate: where a $\Delta$ has a subscript this means the diagonal map on
that object, otherwise it means the environment in
$\tjudge{s_1}{\Delta}{v}{\typeR}$. Ultimately, conclude that \[\sem{\tjudge{s
\cup s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r}} } {t[v]}{\typeP}} = i_2^*
\sem{\tjudge{s}{\Gamma'}{t}{\typeP}} \circ \sigma \circ (\mathbf{1}_\Gamma \amp
i_1^* \sem{v}^n) \] where $t[v]$ is the term obtained by simultaneously
substituting $v$ for the variables $\termvar{y1}, \ldots, \termvar{yn}$ in $t$.

The proof now proceeds by induction on the derivation of
$\tjudge{s}{\Gamma'}{t}{\typeP}$.
%
Throughout, variables beginning with $\termvar{y}$ and $\termvar{z}$ such as
$\termvar{y1}, \termvar{ym}$ and $\termvar{zn}$ represent those that are
subject to substitution, whereas others such as $\termvar{x}$ and
$\termvar{x1}$ stand for those that are not.
%
Where it is unimportant, omit the map $\sigma$ and the functors $i_1^*$ and
$i_2^*$ to preserve the clarity of the proof.

\subparagraph{Variable}
%\infer{\tjudge{\varnothing}{\envvarfresh{x}{\typeP}{\varnothing}
%}{\termvar{x}}{\typeP}}{-}
There are two possibilities for the variable rule, depending on whether the
variable in question is subject to substitution or not. If it is subject to
substitution then $t = \termvar{y}$, $n = 1$ and $s = r = \varnothing$ so
$i_1^*$ is the identity functor and \[\begin{array}{rcl}
\sem{\tjudge{s_1}{\Delta}{\termsubst{t}{v}{y}}{\typeR}} &=&
\sem{\tjudge{s_1}{\Delta}{v}{\typeR}} \\ &=&
\sem{\tjudge{\varnothing}{\envvarfresh{x}{\typeR}{\varnothing}}{\termvar{x}}{\typeR}}
\circ (\mathbf{1}_{\envempty} \amp \sem{\tjudge{s_1}{\Delta}{v}{\typeR}}) \\
&=&
\sem{\tjudge{\varnothing}{\envvarfresh{x}{\typeR}{\varnothing}}{\termvar{x}}{\typeR}}
\circ (\mathbf{1}_{\envempty} \amp \sem{v}^n) \end{array}\] as required. On the
other hand if the variable in question is not subject to substitution then $t =
\termvar{x}$ and $n = 0$ so that \[\begin{array}{rcl}
\sem{\tjudge{s_1}{\envcombine{\envvarfresh{x}{\typeP}{\varnothing}}{\Delta}}{\termsubst{t}{v}{y}}{\typeP}}
&=&
\sem{\tjudge{s_1}{\envcombine{\envvarfresh{x}{\typeP}{\varnothing}}{\Delta}}{\termvar{x}}{\typeP}}
\\ &=&
\sem{\tjudge{\varnothing}{\envvarfresh{x}{\typeP}{\varnothing}}{\termvar{x}}{\typeP}}
\circ \pi_1 \\ &=&
\sem{\tjudge{\varnothing}{\envvarfresh{x}{\typeP}{\varnothing}}{\termvar{x}}{\typeP}}
\circ (\mathbf{1}_{\typeP} \amp \sem{v}^n) \end{array}\] as required.


\subparagraph{Weakening} 
%\infer{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{\varnothing}
%}}{t}{\typeP}} {\tjudge{s}{\Gamma}{t}{\typeP}}
There are two possibilities for the weakening rule, depending on whether the
newly-added variable is subject to substitution or not.  Suppose that
$\tjudge{s}{\envcombine{\Gamma'}{\envvarfresh{yn}{\typeR}{\varnothing}
}}{t}{\typeP}$ is derived from $\tjudge{s}{\Gamma'}{t}{\typeP}$, then
$\termvar{yn}$ does not appear free in $t$ and $n > 0$ and hence
\[\begin{array}{rcll} \multicolumn{4}{l}{\sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r_1 \cup \ldots \cup r_{n-1} \cup
\varnothing}}}{t[v]}{\typeP}}}\\
%
&=& \sem{\tjudge{s}{\Gamma'}{t}{\typeP}} \circ (\mathbf{1}_\Gamma \amp
\sem{v}^{n-1}) & \text{by induction} \\
%
&=& \sem{\tjudge{s}{\Gamma'}{t}{\typeP}} \circ \pi \circ (\mathbf{1}_\Gamma
\amp \sem{v}^{n}) \\
%
&=& \sem{\tjudge{s}{\envcombine{\Gamma'}{\envvarfresh{yn}{\typeR}{\varnothing}
}}{t}{\typeP}} \circ (\mathbf{1}_\Gamma \amp \sem{v}^{n}) \\ \end{array}\] as
required.

On the other hand, suppose that
$\tjudge{s}{\envcombine{\Gamma'}{\envvarfresh{x}{\typeQ}{\varnothing}
}}{t}{\typeP}$ is derived from the judgement $\tjudge{s}{\Gamma'}{t}{\typeP}$,
then \[\begin{array}{rcll} \multicolumn{4}{l}{\sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envcombine{\envfresh{\Delta}{r}}{\envvarfresh{x}{\typeQ}{\varnothing}}
}}{t[v]}{\typeP}}} \\
%
&=& \sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r}}}{t[v]}{\typeP}} \circ \pi \\
%
&=& \sem{\tjudge{s}{\Gamma'}{t}{\typeP}} \circ (\mathbf{1}_\Gamma \amp \sem{v}^n) \circ \pi
&\text{by induction} \\
%
&=& \sem{\tjudge{s}{\Gamma'}{t}{\typeP}} \circ \pi \circ (\mathbf{1}_{\Gamma
\amp \typeQ} \amp \sem{v}^n) \\
%
&=& \sem{\tjudge{s}{\envcombine{\Gamma'}{\envvarfresh{x}{\typeQ}{\varnothing}
}}{t}{\typeP}} \circ (\mathbf{1}_{\Gamma
\amp \typeQ} \amp \sem{v}^n) \\
\end{array}\] as required.

\subparagraph{Exchange} This case is trivial, by reordering the environments appropriately.

\subparagraph{Contraction} There are two possibilities for this case, depending on
whether the contracted variable is subject to substitution or not. Suppose that
the judgement
$\tjudge{s}{\envcombine{\Gamma'}{\envvarfresh{yn}{\typeR}{r_n}
}}{\termsubst{t}{\termvar{yn}}{ym}}{\typeP}$ is derived from a judgement of the form
$\tjudge{s}{\envcombine{\Gamma'}{\envcombine{\envvarfresh{yn}{\typeR}{r_n}
}{\envvarfresh{ym}{\typeR}{r_n}} }}{t}{\typeP}$, then 
\[\begin{array}{rcl} \multicolumn{3}{l}{ \sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r}} }{\termsubst{t}{\termvar{yn}}{ym}[v]}{\typeP}} } \\
%
&=&
\sem{\tjudge{s \cup s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r}}
}{t[v]}{\typeP}} \\
%
&=&
\sem{\tjudge{s}{\envcombine{\Gamma'}{\envcombine{\envvarfresh{yn}{\typeR}{r_n}
}{\envvarfresh{ym}{\typeR}{r_n}} }}{t}{\typeP}} 
\circ \bigl( \mathbf{1}_{\Gamma} \amp 
\sem{v}^{n+1} \bigr) \quad \text{by induction}\\
%
&=&
\sem{\tjudge{s}{\envcombine{\Gamma'}{\envcombine{\envvarfresh{yn}{\typeR}{r_n}
}{\envvarfresh{ym}{\typeR}{r_n}} }}{t}{\typeP}} 
\circ \bigl( \mathbf{1}_{\Gamma'} \amp \Delta_{\typeR^{\freshfor r}} \bigr)
\circ \bigl( \mathbf{1}_{\Gamma} \amp 
\sem{v}^{n} \bigr) \\
%
&=&
\sem{\tjudge{s}{\envcombine{\Gamma'}{\envvarfresh{yn}{\typeR}{r_n}
}}{\termsubst{t}{\termvar{yn}}{ym}}{\typeP}}
\circ \bigl( \mathbf{1}_{\Gamma} \amp \sem{v}^{n} \bigr) \\
%
\end{array}\]
as required.

On the other hand suppose that the judgement
$\tjudge{s}{\envcombine{\Gamma'}{\envvarfresh{x1}{\typeQ}{s'}
}}{\termsubst{t}{\termvar{x1}}{x2}}{\typeP}$ is derived from the judgement
$\tjudge{s}{\envcombine{\Gamma'}{\envcombine{\envvarfresh{x1}{\typeQ}{s'}
}{\envvarfresh{x2}{\typeQ}{s'}} }}{t}{\typeP}$, then 
\[\begin{array}{rcl}
\multicolumn{3}{l}{\sem{\tjudge{s \cup
s_1}{\envcombine{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ}{s'}} }
{\envfresh{\Delta}{r}} }{\termsubst{t}{\termvar{x1}}{x2}[v]}{\typeP}}} \\
%
&=&
\sem{\tjudge{s \cup
s_1}{\envcombine{\envcombine{\Gamma}{\envvarfresh{x1}{\typeQ}{s'}} }
{\envfresh{\Delta}{r}} }{\termsubst{t[v]}{\termvar{x1}}{x2}}{\typeP}} \\
%
&=&
\sem{\tjudge{s \cup
s_1}{\envcombine{\envcombine{\Gamma}{\envcombine{\envvarfresh{x1}{\typeQ}{s'}
}{\envvarfresh{x2}{\typeQ}{s'}} }}{\envfresh{\Delta}{r}} }{t[v]}{\typeP}} \circ 
(\mathbf{1}_{\Gamma \amp \envfresh{\Delta}{r}} \amp \Delta_{\typeQ^{\freshfor s'}})\\
%
&=&
\sem{\tjudge{s}{\envcombine{\Gamma'}{\envcombine{\envvarfresh{x1}{\typeQ}{s'}
}{\envvarfresh{x2}{\typeQ}{s'}} }}{t}{\typeP}}
\circ (\mathbf{1}_{\Gamma \amp \typeQ^{\freshfor s'} \amp \typeQ^{\freshfor
s'}} \amp \sem{v}^{n}) \\&&{} \circ (\mathbf{1}_{\Gamma \amp
\envfresh{\Delta}{r}} \amp \Delta_{\typeQ^{\freshfor s'}})
\quad\text{by induction} \\
%
&=&
\sem{\tjudge{s}{\envcombine{\Gamma'}{\envcombine{\envvarfresh{x1}{\typeQ}{s'}
}{\envvarfresh{x2}{\typeQ}{s'}} }}{t}{\typeP}}
\circ (\mathbf{1}_{\Gamma'} \amp \Delta_{\typeQ^{\freshfor s'}})
\circ (\mathbf{1}_{\Gamma \amp \typeQ^{\freshfor s'}} \amp \sem{v}^{n}) \\
%
&=&
\sem{\tjudge{s}{\envcombine{\Gamma'}{\envvarfresh{x1}{\typeQ}{s'}
}}{\termsubst{t}{\termvar{x1}}{x2}}{\typeP}}
\circ (\mathbf{1}_{\Gamma \amp \typeQ^{\freshfor s'}} \amp \sem{v}^{n}) \\
\end{array}\]
as required.

\subparagraph{Fresh-Weakening}
%\infer[(s'' \subseteq s' \subseteq s)]
%{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{s'} }}{t}{\typeP}}
%{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQ}{s''} }}{t}{\typeP}} 
There are two possibilities for this case, depending on whether the variable
with extra freshness assumptions is subject to substitution or not. If it is
not subject to substitution then this case is a simple application of the
inductive hypothesis. On the other hand, suppose that $r'_n \subseteq r_n
\subseteq s$, that $\Gamma'$ is a reordering of the environment $\Gamma,
\envvarfresh{y1}{\typeR}{r_1}, \ldots, \envvarfresh{yn}{\typeR}{r_n}$ and also
that $\Gamma''$ is a reordering of the environment $\Gamma,
\envvarfresh{y1}{\typeR}{r_1}, \ldots, \envvarfresh{yn}{\typeR}{r'_n}$. If
$\tjudge{s}{\Gamma'}{t}{\typeP}$ is derived from
$\tjudge{s}{\Gamma''}{t}{\typeP}$ then 
\[\begin{array}{rcl}
\multicolumn{3}{l}{\sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r_1 \cup \ldots \cup r_{n-1} \cup
r_n} }}{t[v]}{\typeP}}} \\
%
&=& \sem{\tjudge{s \cup s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r_1 \cup
\ldots \cup r_{n-1} \cup
r'_n} }}{t[v]}{\typeP}} \circ \bigl(\mathbf{1}_{\Gamma} \amp k_\Delta \bigr) \\
%
&=& \sem{\tjudge{s}{\Gamma''}{t}{\typeP}} \circ 
\bigl(\mathbf{1}_{\Gamma} \amp \sem{v}^{n}\bigr) \circ
\bigl(\mathbf{1}_{\Gamma} \amp k_\Delta \bigr) \quad\text{by induction} \\
%
&=& \sem{\tjudge{s}{\Gamma''}{t}{\typeP}} \circ 
\bigl(\mathbf{1}_{\Gamma} \amp k^{(1)}_{\typeR} \amp \ldots \amp k^{(n)}_{\typeR} \bigr) \circ
\bigl(\mathbf{1}_{\Gamma} \amp \sem{v}^{n}\bigr) \\
%
&=& \sem{\tjudge{s}{\Gamma'}{t}{\typeP}} \circ 
\bigl(\mathbf{1}_{\Gamma} \amp \sem{v}^{n}\bigr) \\
\end{array}\]
as required.

\subparagraph{Support-Weakening}
%\infer[(s' \subseteq s)] {\tjudge{s}{\Gamma}{t}{\typeP}}
%{\tjudge{s'}{\Gamma}{t}{\typeP}} \\
Suppose that $s' \subseteq s$ and that
$\tjudge{s}{\Gamma'}{t}{\typeP}$ is
derived from $\tjudge{s'}{\Gamma'}{t}{\typeP}$, then 
\[\begin{array}{rcl}
\multicolumn{3}{l}{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r} }}{t[v]}{\typeP}} \\
%
&=& \sem{\tjudge{s' \cup s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r}
}}{t[v]}{\typeP}} \\
%
&=& \sem{\tjudge{s'}{\Gamma'}{t}{\typeP}} \circ \bigl(\mathbf{1}_{\Gamma}
\amp \sem{v}^{n}\bigr) \quad\text{by induction}\\
%
&=& \sem{\tjudge{s}{\Gamma'}{t}{\typeP}} \circ \bigl(\mathbf{1}_{\Gamma}
\amp \sem{v}^{n}\bigr)\\
\end{array}\]
as required.

\subparagraph{Prefix}
%\infer{\tjudge{s}{\Gamma}{\bang{t}}{\typelift\typeP}}
%{\tjudge{s}{\Gamma}{t}{\typeP}} &&
Suppose that $\tjudge{s}{\Gamma'}{\bang{t}}{\typelift\typeP}$ is derived from
$\tjudge{s}{\Gamma'}{t}{\typeP}$, then 
\[\begin{array}{rcl}
\multicolumn{3}{l}{\sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r} }}{(\bang{t})[v] =
\bang{(t[v])}}{\typelift\typeP}}} \\
&=& \eta_\typeP \circ {\sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r} }}{t[v]}{\typeP}}} \\
&=& \eta_\typeP \circ \sem{\tjudge{s}{\Gamma'}{t}{\typeP}}
\circ (\mathbf{1}_\Gamma \circ \sem{v}^{n}) \quad \text{by induction} \\
&=& \sem{\tjudge{s}{\Gamma'}{\bang{t}}{\typelift\typeP}}
\circ (\mathbf{1}_\Gamma \circ \sem{v}^{n})
\end{array}\]
as required.

\subparagraph{Recursion} Suppose that $\tjudge{s}{\Gamma'}{\rec{x}{t}}{\typeP}$ is
derived from the judgement
$\tjudge{s}{\envcombine{\Gamma'}{\envvarfresh{x}{\typeP}{\varnothing}
}}{t}{\typeP}$.
%
%then $\tjudge{s \cup s_1}{\envcombine{\envcombine{\Gamma}{\envfresh{\Delta}{r}
%}}{\envvarfresh{x}{\typeP}{\varnothing} }}{t[v]}{\typeP}$ by induction and
%hence $\tjudge{s \cup s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r}
%}}{\rec{x}{(t[v])} = (\rec{x}{t}) [v]}{\typeP}$ as required.
%
Let \[\begin{array}{rcl}f &=&
\sem{\tjudge{s}{\envcombine{\Gamma'}{\envvarfresh{x}{\typeP}{\varnothing}
}}{t}{\typeP}} \\ \text{and} \qquad f' &=& \sem{\tjudge{s \cup
s_1}{\envcombine{\envcombine{\Gamma}{\envfresh{\Delta}{r}
}}{\envvarfresh{x}{\typeP}{\varnothing}
}}{\termsubst{t}{v}{y}}{\typeP}},\end{array}\] then by the induction hypothesis
$f' = f \circ (\mathbf{1}_{\Gamma} \amp \sem{v}^{n} \amp \mathbf{1}_{\typeP})$.
Let $g_0 = g'_0 = \varnothing$ and for each $m$ let $g_{m+1} = f \circ
(\mathbf{1}_{\Gamma'} \amp g_m) \circ \Delta_{\Gamma'}$ and $g'_{m+1} = f'
\circ (\mathbf{1}_{\Gamma \amp \Delta^{\freshfor r}} \amp g'_m) \circ
\Delta_{\Gamma \amp \Delta^{\freshfor r}}$.
Now
by induction on $m$ it follows that $g'_m = g_m \circ (\mathbf{1}_{\Gamma}
\amp \sem{v}^{n})$:
Certainly this holds for $m = 0$, since both sides are $\varnothing$.
Furthermore
\[\begin{array}{rcl}
%
g'_{m+1} &=& f' \circ (\mathbf{1}_{\Gamma \amp
\Delta^{\freshfor r}} \amp g'_m) \circ \Delta_{\Gamma \amp \Delta^{\freshfor r}}\\
%
&=& f \circ (\mathbf{1}_{\Gamma} \amp
\sem{v}^{n} \amp \mathbf{1}_{\typeP}) 
\circ (\mathbf{1}_{\Gamma} \amp \mathbf{1}_{\Delta^{\freshfor r}} 
\amp g'_m)  \circ \Delta_{\Gamma \amp \Delta^{\freshfor r}}
\\
%
&=& f \circ (\mathbf{1}_{\Gamma} \amp \sem{v}^{n} \amp g'_m) \circ
\Delta_{\Gamma \amp \Delta^{\freshfor r}} \\
%
&=& f \circ (\mathbf{1}_{\Gamma} \amp 
\sem{v}^{n}\amp 
(g_m \circ (\mathbf{1}_{\Gamma} \amp 
\sem{v}^{n})
) ) \circ \Delta_{\Gamma \amp
\Delta^{\freshfor r}}
%
\\
&=& f \circ
(\mathbf{1}_{\Gamma'} \amp g_m) 
%
\\&&{}\circ (\mathbf{1}_{\Gamma} \amp \sem{v}^{n} \amp 
\mathbf{1}_{\Gamma} \amp \sem{v}^{n})
\circ \Delta_{\Gamma \amp \Delta^{\freshfor r}}
\\
&=& f \circ
(\mathbf{1}_{\Gamma'} \amp g_m) \circ \Delta_{\Gamma'}
\circ (\mathbf{1}_{\Gamma} \amp \sem{v}^{n})
%
\\ &=& g_{m+1} \circ (\mathbf{1}_{\Gamma} \amp \sem{v}^{n})
\end{array}\]
by, respectively, the definition of $g'_{m+1}$, the relationship between $f$
and $f'$ established above, the universal property of products, the inductive hypothesis,
the universal property of products, the universal property of diagonals and finally the definition of $g_{m+1}$.
This completes the induction, so that 
\[\begin{array}{rcl}
\multicolumn{3}{l}{\sem{\tjudge{s \cup s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r}
}}{(\rec{x}{t})[v] = \rec{x}{(t[v])}}{\typeP}}} \\
&=& \bigsqcup_{m \in \omega} g'_m \\
&=& \bigsqcup_{m \in \omega} \bigl( g_m \circ (\mathbf{1}_{\Gamma} \amp
\sem{v}^{n}) \bigr)  \\
&=& \left( \bigsqcup_{m \in \omega} g_m \right) \circ (\mathbf{1}_{\Gamma} \amp
\sem{v}^{n}) \qquad \text{by continuity} \\ 
&=& \sem{\tjudge{s}{\Gamma'}{\rec{x}{t}}{\typeP}} \circ (\mathbf{1}_{\Gamma} \amp
\sem{v}^{n}) \\ 
\end{array}\]
as required.

\vfill\pagebreak

\subparagraph{Prefix-Match}
%\infer[(s'' \subseteq s \setminus s')]
%{\tjudge{s}{\envcombine{\Gamma}{\envfresh{\Lambda}{s'} }}
%{\matchz{s'}{u}{q}{x}{t}{\typeQp}}{\typeP}}
%{\tjudge{s}{\envcombine{\Gamma}{\envvarfresh{x}{\typeQp}{s'} }}{t}{\typeP} &
%\tjudge{s''}{\Lambda}{u}{\typeQ} & \atjudge{s''}{\typeQ}{q}{\typeQp} }} \\
Suppose that $\tjudge{s}{\envcombine{\Gamma'}{\envfresh{\Lambda'}{s'} }}
{\matchz{s'}{u}{q}{x}{t}{\typeQp}}{\typeP}$ is derived from
$\tjudge{s}{\envcombine{\Gamma'}{\envvarfresh{x}{\typeQp}{s'} }}{t}{\typeP}$,
$\tjudge{s''}{\Lambda'}{u}{\typeQ}$ and $\atjudge{s''}{\typeQ}{q}{\typeQp}$
where $s'' \subseteq s \setminus s'$. Suppose that $\Gamma'$ is a reordering of
$\Gamma, \envvarfresh{y1}{\typeR}{r_1}, \ldots, \envvarfresh{yn}{\typeR}{r_n}$
and that $\Lambda'$ is a reordering of $\Lambda,
\envvarfresh{z1}{\typeR}{r'_1}, \ldots, \envvarfresh{zm}{\typeR}{r'_m}$. Let $r
= r_1 \cup \ldots \cup r_n$ and $r' = r'_1 \cup \ldots \cup r'_m$.  There are
now two possibilities, depending on whether $m = 0$ or not. Suppose that $m
\neq 0$. Let $\Delta'$ and $v'$ be $\Delta$ and $v$ with all the variables
renamed. Then \[\begin{array}{rcl} \multicolumn{3}{l}{\sem{\tjudge{s \cup
s_1}{\envcombine{\envcombine{\Gamma}{\envfresh{\Lambda}{s'}}
}{\envfresh{\Delta}{r \cup r' \cup s'}} }
{\matchz{s'}{u}{q}{x}{t}{\typeQp}[v]}{\typeP}}} \\
%
&=& \sem{\tjudge{s \cup
s_1}{\envcombine{\envcombine{\envcombine{\Gamma}{\envfresh{\Delta}{r \cup r'
\cup s'}}}{\envfresh{\Lambda}{s'}} }{\envfresh{\Delta'}{r \cup r' \cup s'}} }
{\matchz{s'}{u[v']}{q}{x}{t[v]}{\typeQp}}{\typeP}} \\&&{} \circ
\bigl(\mathbf{1}_{\Gamma} \amp \mathbf{1}_{\Lambda^{\freshfor s'}} \amp
\Delta_{\Delta^{\freshfor r \cup r' \cup s'}}\bigr) \\
%
&=& \sem{\tjudge{s \cup
s_1}{\envcombine{\envcombine{\envcombine{\Gamma}{\envfresh{\Delta}{r}}}{\envfresh{\Lambda}{s'}}
}{\envfresh{\Delta'}{r' \cup s'}} } {\matchz{s'}{u[v']}{q}{x}{t[v]}{\typeQp}}{\typeP}}
\\&&{} \circ \bigl(\mathbf{1}_\Gamma \amp k^{(1)}_\Delta \amp
\mathbf{1}_{\envfresh{\Lambda}{s'}} \amp k^{(2)}_\Delta \bigr) \circ
\bigl(\mathbf{1}_{\Gamma} \amp \mathbf{1}_{\Lambda^{\freshfor s'}} \amp
\Delta_{\Delta^{\freshfor r \cup r' \cup s'}}\bigr) \\
%
&=& \epsilon_{\typeP} \circ {!}\sem{\tjudge{s \cup
s_1}{\envcombine{\envcombine{\Gamma}{\envfresh{\Delta}{r}}}{\envvarfresh{x}{\typeQp}{s'}}
} {t[v]}{\typeP}} \circ
\mathbf{str}^{\envcombine{\Gamma}{\envfresh{\Delta}{r}}}_{\typeQp^{\freshfor
s'}} \\&&{} \circ \bigl(\mathbf{1}_\Gamma \amp \mathbf{1}_{\Delta^{\freshfor
r}} \\&&\qquad {} \amp (\widehat{\phi_{\typeQp}} \circ \sem{\atjudge{s'' \cup
s_1}{\typeQ}{q}{\typeQp}}^{\freshfor s'} \circ \sem{\tjudge{s'' \cup
s_1}{\envcombine{\Lambda}{\envfresh{\Delta}{r'}} }{u[v]}{\typeQ}}^{\freshfor
s'} ) \bigr) \\&&{} \circ \bigl(\mathbf{1}_\Gamma \amp k^{(1)}_\Delta \amp
\mathbf{1}_{\envfresh{\Lambda}{s'}} \amp k^{(2)}_\Delta \bigr) \circ
\bigl(\mathbf{1}_{\Gamma} \amp \mathbf{1}_{\Lambda^{\freshfor s'}} \amp
\Delta_{\Delta^{\freshfor r \cup r' \cup s'}}\bigr) \\
%
&=& \epsilon_{\typeP} \circ
{!}\sem{\tjudge{s}{\envcombine{\Gamma'}{\envvarfresh{x}{\typeQp}{s'}} }
{t}{\typeP}} \circ {!}(\mathbf{1}_{\Gamma} \amp \mathbf{1}_{\typeQp^{\freshfor
s'}} \amp \sem{v}^{n}) \circ
\mathbf{str}^{\envcombine{\Gamma}{\envfresh{\Delta}{r}}}_{\typeQp^{\freshfor
s'}} \\&&{} \circ \bigl(\mathbf{1}_\Gamma \amp \mathbf{1}_{\Delta^{\freshfor
r}} \\&&\qquad {} \amp (\widehat{\phi_{\typeQp}} \circ \sem{\atjudge{s'' \cup
s_1}{\typeQ}{q}{\typeQp}}^{\freshfor s'} \circ \sem{\tjudge{s'' \cup
s_1}{\envcombine{\Lambda}{\envfresh{\Delta}{r'}} }{u[v]}{\typeQ}}^{\freshfor
s'} ) \bigr) \\&&{} \circ \bigl(\mathbf{1}_\Gamma \amp k^{(1)}_\Delta \amp
\mathbf{1}_{\envfresh{\Lambda}{s'}} \amp k^{(2)}_\Delta \bigr) \circ
\bigl(\mathbf{1}_{\Gamma} \amp \mathbf{1}_{\Lambda^{\freshfor s'}} \amp
\Delta_{\Delta^{\freshfor r \cup r' \cup s'}}\bigr) \\
%
&=& \epsilon_{\typeP} \circ
{!}\sem{\tjudge{s}{\envcombine{\Gamma'}{\envvarfresh{x}{\typeQp}{s'}} }
{t}{\typeP}} \circ \mathbf{str}^{\Gamma'}_{\typeQp^{\freshfor s'}} \circ
(\mathbf{1}_{\Gamma} \amp \mathbf{1}_{\typeQp^{\freshfor s'}} \amp \sem{v}^{n})
\\&&{} \circ \bigl(\mathbf{1}_\Gamma \amp \mathbf{1}_{\Delta^{\freshfor r}}
\\&&\qquad {} \amp (\widehat{\phi_{\typeQp}} \circ \sem{\atjudge{s'' \cup
s_1}{\typeQ}{q}{\typeQp}}^{\freshfor s'} \circ \sem{\tjudge{s'' \cup
s_1}{\envcombine{\Lambda}{\envfresh{\Delta}{r'}} }{u[v]}{\typeQ}}^{\freshfor
s'} ) \bigr) \\&&{} \circ \bigl(\mathbf{1}_\Gamma \amp k^{(1)}_\Delta \amp
\mathbf{1}_{\envfresh{\Lambda}{s'}} \amp k^{(2)}_\Delta \bigr) \circ
\bigl(\mathbf{1}_{\Gamma} \amp \mathbf{1}_{\Lambda^{\freshfor s'}} \amp
\Delta_{\Delta^{\freshfor r \cup r' \cup s'}}\bigr) \\
%
&=& \epsilon_{\typeP} \circ
{!}\sem{\tjudge{s}{\envcombine{\Gamma'}{\envvarfresh{x}{\typeQp}{s'}} }
{t}{\typeP}} \circ \mathbf{str}^{\Gamma'}_{\typeQp^{\freshfor s'}} \circ
(\mathbf{1}_{\Gamma} \amp \mathbf{1}_{\typeQp^{\freshfor s'}} \amp \sem{v}^{n})
\\&&{} \circ \bigl(\mathbf{1}_\Gamma \amp \mathbf{1}_{\Delta^{\freshfor r}}
\amp (\widehat{\phi_{\typeQp}} \circ
\sem{\atjudge{s''}{\typeQ}{q}{\typeQp}}^{\freshfor s'} \circ
\sem{\tjudge{s''}{\Lambda'}{u}{\typeQ}}^{\freshfor s'} \\&&\qquad {}\circ
(\mathbf{1}_{\Lambda^{\freshfor s'}} \amp {\sem{v}^{m}}^{\freshfor s'})) \bigr)
\\&&{} \circ \bigl(\mathbf{1}_\Gamma \amp k^{(1)}_\Delta \amp
\mathbf{1}_{\envfresh{\Lambda}{s'}} \amp k^{(2)}_\Delta \bigr) \circ
\bigl(\mathbf{1}_{\Gamma} \amp \mathbf{1}_{\Lambda^{\freshfor s'}} \amp
\Delta_{\Delta^{\freshfor r \cup r' \cup s'}}\bigr) \\
%
&=& \epsilon_{\typeP} \circ
{!}\sem{\tjudge{s}{\envcombine{\Gamma'}{\envvarfresh{x}{\typeQp}{s'}} }
{t}{\typeP}} \circ \mathbf{str}^{\Gamma'}_{\typeQp^{\freshfor s'}} \circ
\bigl(\mathbf{1}_{\Gamma'} \\&&\qquad {} \amp (\widehat{\phi_{\typeQp}} \circ
\sem{\atjudge{s''}{\typeQ}{q}{\typeQp}}^{\freshfor s'} \circ
\sem{\tjudge{s''}{\Lambda'}{u}{\typeQ}}^{\freshfor s'}) \bigr) \\&&{} \circ
(\mathbf{1}_{\Gamma} \amp \mathbf{1}_{{\Lambda'}^{\freshfor s'}} \amp
\sem{v}^{n}) \circ (\mathbf{1}_\Gamma \amp \mathbf{1}_{\Delta^{\freshfor r}}
\amp \mathbf{1}_{\Lambda^{\freshfor s'}} \amp {\sem{v}^{m}}^{\freshfor s'})
\\&&{} \circ \bigl(\mathbf{1}_\Gamma \amp k^{(1)}_\Delta \amp
\mathbf{1}_{\envfresh{\Lambda}{s'}} \amp k^{(2)}_\Delta \bigr) \circ
\bigl(\mathbf{1}_{\Gamma} \amp \mathbf{1}_{\Lambda^{\freshfor s'}} \amp
\Delta_{\Delta^{\freshfor r \cup r' \cup s'}}\bigr) \\
%
&=&
\sem{\tjudge{s}{\envcombine{\Gamma'}{\envfresh{\Lambda'}{s'}}}{\matchz{s'}{u}{q}{x}{t}{\typeQp}}{\typeP}}
\\&&{} \circ \Bigl(\mathbf{1}_{\Gamma} \amp \mathbf{1}_{{\Lambda}^{\freshfor
s'}} \amp \bigl((\sem{v}^{n} \amp {\sem{v}^{m}}^{\freshfor s'}) \circ
(k^{(1)}_\Delta \amp k^{(2)}_\Delta) \circ \Delta_{\Delta^{\freshfor r \cup r'
\cup s'}}\bigr)\Bigr) \\
%
&=&
\sem{\tjudge{s}{\envcombine{\Gamma'}{\envfresh{\Lambda'}{s'}}}{\matchz{s'}{u}{q}{x}{t}{\typeQp}}{\typeP}}
\circ (\mathbf{1}_{\Gamma} \amp \mathbf{1}_{{\Lambda}^{\freshfor s'}} \amp
\sem{v}^{m+n}) \\
%
\end{array}\] as required. The proof in the case $m = 0$ is similar, albeit
simpler.

\subparagraph{Function Abstraction} Suppose that
$\tjudge{s}{\Gamma'}{\abstract{x}{t}}{\typemap{\typeQ}{\typeP}}$ is derived from the judgement
$\tjudge{s}{\envcombine{\Gamma'}{\envvarfresh{x}{\typeQ}{\varnothing}
}}{t}{\typeP}$, then\[\begin{array}{rcl}
\multicolumn{3}{l}{\sem{\tjudge{s \cup s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r}
}}{(\abstract{x}{t})[v] = \abstract{x}{(t[v])}}{\typemap{\typeQ}{\typeP}}}} \\
%
&=& \mathbf{curry}\bigl( \sem{\tjudge{s \cup s_1}{
\envcombine{\envcombine{\Gamma}{\envfresh{\Delta}{r}}}{\envvarfresh{x}{\typeQ}{\varnothing}}}
{t[v]}{\typeP}} \bigr) \\
%
&=& \mathbf{curry}\bigl( \sem{\tjudge{s}{
\envcombine{\Gamma'}{\envvarfresh{x}{\typeQ}{\varnothing}}}
{t}{\typeP}} \circ (\mathbf{1}_{\Gamma} \amp \mathbf{1}_{\typeQ} \amp \sem{v}^n ) \bigr)
\quad\text{by induction}\\
%
&=& \mathbf{curry}\bigl( \sem{\tjudge{s}{
\envcombine{\Gamma'}{\envvarfresh{x}{\typeQ}{\varnothing}}}
{t}{\typeP}} \bigr) \circ \bigl( \mathbf{1}_{\Gamma} \amp \sem{v}^n \bigr) \\
%
&=& \sem{\tjudge{s}{\Gamma'}
{\abstract{x}{t}}{\typeP}} \circ \bigl( \mathbf{1}_{\Gamma} \amp \sem{v}^n \bigr)
\end{array}\]
as required.

\subparagraph{Function Application} Suppose that
$\tjudge{s}{\envcombine{\Gamma'}{\Lambda'}}{\apply{t}{u}{\typeQ}}{\typeP}$ is derived
from $\tjudge{s}{\Gamma'}{t}{\typemap{\typeQ}{\typeP}}$ and
$\tjudge{s}{\Lambda'}{u}{\typeQ}$.  Suppose that $\Gamma'$ is a reordering of
the environment $\Gamma, \envvarfresh{y1}{\typeR}{r_1}, \ldots,
\envvarfresh{yn}{\typeR}{r_n}$ and that $\Lambda'$ is a reordering of the
environment $\Lambda, \envvarfresh{z1}{\typeR}{r'_1}, \ldots,
\envvarfresh{zm}{\typeR}{r'_m}$. Let $r = r_1 \cup \ldots \cup r_n$ and $r' =
r'_1 \cup \ldots \cup r'_m$. Then \[\begin{array}{rcl} \multicolumn{3}{l}{
%
\sem{ \tjudge{s \cup s_1}{\envcombine{\Gamma}
{\envcombine{\Lambda}{\envfresh{\Delta}{r \cup r'}} }}{ (\apply{t}{u}{\typeQ})[v] =
\apply{(t[v])}{(u[v])}{\typeQ} }{\typeP}}}\\
%
&=& \sem{\tjudge{s \cup
s_1}{\envcombine{\envcombine{\Gamma}{\envfresh{\Delta}{r}} }
{\envcombine{\Lambda}{\envfresh{\Delta'}{r'}} }}{\apply{(t[v])}{(u[v'])}{\typeQ}
}{\typeP}} \\&&{} \circ \bigl( \mathbf{1}_{\Gamma} \amp \mathbf{1}_{\Lambda}
\amp ((k^{(1)}_\Delta \amp k^{(2)}_\Delta) \circ \Delta_{\Delta}) \\
%
&=& \mathbf{apply} \circ \bigl(\sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r}} }{t[v]}{\typemap{\typeQ}{\typeP}}}
\amp \sem{\tjudge{s \cup
s_1}{\envcombine{\Lambda}{\envfresh{\Delta}{r'}} }{u[v]}{\typeQ}} \bigr)
\\&&{} \circ \bigl( \mathbf{1}_{\Gamma} \amp \mathbf{1}_{\Lambda}
\amp ((k^{(1)}_\Delta \amp k^{(2)}_\Delta) \circ \Delta_{\Delta}) \\
%
&=& \mathbf{apply} \circ \bigl(\sem{\tjudge{s}{\Gamma'}{t}{\typemap{\typeQ}{\typeP}}}
\amp \sem{\tjudge{s}{\Lambda'}{u}{\typeQ}} \bigr)
\circ \bigl(\mathbf{1}_{\Gamma} \amp \sem{v}^n \amp \mathbf{1}_{\Lambda} \amp \sem{v}^m \bigr) 
\\&&{} \circ \bigl( \mathbf{1}_{\Gamma} \amp \mathbf{1}_{\Lambda}
\amp ((k^{(1)}_\Delta \amp k^{(2)}_\Delta) \circ \Delta_{\Delta}) \\
%
&=& \mathbf{apply} \circ \bigl(\sem{\tjudge{s}{\Gamma'}{t}{\typemap{\typeQ}{\typeP}}}
\amp \sem{\tjudge{s}{\Lambda'}{u}{\typeQ}} \bigr)
\circ \bigl(\mathbf{1}_{\Gamma} \amp \mathbf{1}_{\Lambda} \amp \sem{v}^{n+m} \bigr)  \\
%
&=& \sem{\tjudge{s}{\envcombine{\Gamma'}{\Lambda'}}{\apply{t}{u}{\typeQ}}{\typeP}}
\circ \bigl(\mathbf{1}_{\Gamma} \amp \mathbf{1}_{\Lambda} \amp \sem{v}^{n+m} \bigr)  \\
\end{array}\]
as required.


\vfill\pagebreak

\subparagraph{Name Abstraction} Suppose that
$\tjudge{s}{\Gamma'}{\new{a}{t}}{\typedelta \typeP}$ is derived from $\tjudge{s
\udot \{a\}}{\envfresh{\Gamma'}{a}}{t}{\typeP}$ where $a$ is a fresh name and
$\Gamma'$ is a reordering of $\Gamma, \envvarfresh{y1}{\typeR}{r_1}, \ldots,
\envvarfresh{yn}{\typeR}{r_n}$. Notice that as $a$ is fresh, therefore $a
\notin r$ and $a \notin s_1$ so that $a \freshfor v$. Then \[\begin{array}{rcl}
%
\multicolumn{3}{l}{\sem{ \tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r}} }{ (\new{a}{t})[v] =
\new{a}{(t[v])} }{\typedelta\typeP} }} \\
%
&=& \sem{ \tjudge{s \cup s_1 \cup
\{a\}}{\envcombine{\envfresh{\Gamma}{a}}{\envfresh{\Delta}{r \udot \{a\}}}
}{t[v]}{\typeP} }^{\vee} \\
%
&=& \bigl( \sem{ \tjudge{s \cup \{a\}}{\envfresh{\Gamma'}{a}}{t}{\typeP} }
\circ (\mathbf{1}_{\Gamma^{\freshfor a}} \amp {\sem{v}^{n}}^{\freshfor a})\bigr)^{\vee}
\quad\text{by induction}\\
%
&=& \sem{ \tjudge{s \cup \{a\}}{\envfresh{\Gamma'}{a}}{t}{\typeP} }^{\vee}
\circ (\mathbf{1}_{\Gamma} \amp \sem{v}^{n}) \\
%
&=& \sem{ \tjudge{s}{\Gamma'}{\new{a}{t}}{\typedelta\typeP} }
\circ (\mathbf{1}_{\Gamma} \amp \sem{v}^{n}) \\
%
\end{array}\]
as required.

\subparagraph{Name Application} Suppose that $a \notin s$ and that $\tjudge{s
\udot \{a\}}{\envfresh{\Gamma'}{a}}{\newapply{t}{a}}{\typeP}$ is derived from
$\tjudge{s}{\Gamma'}{t}{\typedelta \typeP}$ where $\Gamma'$ is a reordering of
$\Gamma, \envvarfresh{y1}{\typeR}{r_1}, \ldots, \envvarfresh{yn}{\typeR}{r_n}$.
By hypothesis, $s_1 \cap (r \udot \{a\}) = \varnothing$ so that $a \notin s_1$
and hence $a \freshfor v$. Then \[\begin{array}{rcl}
%
\multicolumn{3}{l}{\sem{ \tjudge{s \cup s_1
\udot\{a\}}{\envcombine{\envfresh{\Gamma}{a}}{\envfresh{\Delta}{r \udot\{a\}}
}} { (\newapply{t}{a})[v] = \newapply{(t[v])}{a} }{\typeP} }} \\
%
&=&
\sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r}
}}{t[v]}{\typedelta \typeP}}^{\wedge} \\
%
&=&
\bigl(\sem{\tjudge{s}{\Gamma'}{t}{\typedelta \typeP}}
\circ (\mathbf{1}_\Gamma \amp \sem{v}^{n})
\bigr)^{\wedge} \\
%
&=&
\sem{\tjudge{s}{\Gamma'}{t}{\typedelta \typeP}}^{\wedge}
\circ (\mathbf{1}_{\Gamma^{\freshfor a}} \amp {\sem{v}^{n}}^{\freshfor a})
\\
%
&=& \sem{\tjudge{s \udot
\{a\}}{\envfresh{\Gamma'}{a}}{\newapply{t}{a}}{\typeP}}
\circ (\mathbf{1}_{\Gamma^{\freshfor a}} \amp {\sem{v}^{n}}^{\freshfor a})
\end{array}\]
as required.

\subparagraph{Labelling} Suppose that
$\tjudge{s}{\Gamma'}{\linj{\ell_0}{t}}{\stdtypesum}$ is derived from
$\tjudge{s}{\Gamma'}{t}{\typePsub{\ell_0}}$, then 
\[\begin{array}{rcl}
%
\multicolumn{3}{l}{\sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r} }}{(\linj{\ell_0}{t})[v] =
\linj{\ell_0}{(t[v])}}{\stdtypesum}}} \\
%
&=& \mathbf{in}_{\ell_0} \circ {\sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r} }}{t[v]}{\typePsub{\ell_0}}}} \\
%
&=& \mathbf{in}_{\ell_0} \circ \sem{\tjudge{s}{\Gamma'}{t}{\typePsub{\ell_0}}} \circ
(\mathbf{1}_\Gamma \circ \sem{v}^{n}) \quad \text{by induction} \\
%
&=& \sem{\tjudge{s}{\Gamma'}{\linj{\ell_0}{t}}{\stdtypesum}} \circ (\mathbf{1}_\Gamma \circ
\sem{v}^{n})
%
\end{array}\]
as required.


\subparagraph{Label Projection}
Suppose that $\tjudge{s}{\Gamma'}{\lproj{\ell_0}{t}}{\typePsub{\ell_0}}$ is derived from
$\tjudge{s}{\Gamma'}{t}{\stdtypesum}$, then 
\[\begin{array}{rcl}
%
\multicolumn{3}{l}{\sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r} }}{(\lproj{\ell_0}{t})[v] =
\lproj{\ell_0}{(t[v])}}{\typePsub{\ell_0}}}} \\
%
&=& \mathbf{out}_{\ell_0} \circ {\sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r} }}{t[v]}{\stdtypesum}}} \\
%
&=& \mathbf{out}_{\ell_0} \circ \sem{\tjudge{s}{\Gamma'}{t}{\stdtypesum}} \circ
(\mathbf{1}_\Gamma \circ \sem{v}^{n}) \quad \text{by induction} \\
%
&=& \sem{\tjudge{s}{\Gamma'}{\lproj{\ell_0}{t}}{\typePsub{\ell_0}}} \circ (\mathbf{1}_\Gamma \circ
\sem{v}^{n})
%
\end{array}\]
as required.

\subparagraph{Nondeterministic Sum}
Suppose that $\tjudge{s}{\Gamma'}{\ndsum{i}{I}{t_i}}{\typeP}$ is derived from
$\tjudge{s_i}{\Gamma'}{t_i}{\typeP}$ for all $i \in I$, then 
\[\begin{array}{rcl}
%
\multicolumn{3}{l}{\sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r} }}{(\ndsum{i}{I}{t_i})[v] =
\ndsum{i}{I}{(t_i[v])}}{\typeP}}} \\
%
&=& \sum_{i \in I} \sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r} }}{t_i[v]}{\typeP}} \\
%
&=& \sum_{i \in I} \bigl(\sem{\tjudge{s}{\Gamma'}{t_i}{\typeP}} \circ
(\mathbf{1}_\Gamma \circ \sem{v}^{n})\bigr) \quad \text{by induction} \\
%
&=& \left(\sum_{i \in I} \sem{\tjudge{s}{\Gamma'}{t_i}{\typeP}}\right) \circ
(\mathbf{1}_\Gamma \circ \sem{v}^{n})\\
%
&=& \sem{\tjudge{s}{\Gamma'}{\ndsum{i}{I}{t_i}}{\typeP}} \circ (\mathbf{1}_\Gamma \circ
\sem{v}^{n})
%
\end{array}\]
as required.

\subparagraph{Recursive Type Folding}
Suppose that $\tjudge{s}{\Gamma'}{\abs{t}}{\typerec{j}{P}{\typeP} }$ is derived from
$\tjudge{s}{\Gamma'}{t}{\typeP_j[\typerec{}{P}{\typeP}/\vec{P}]}$, then
\[\begin{array}{rcl}
%
\multicolumn{3}{l}{\sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r} }}{(\abs{t})[v] =
\abs{(t[v])}}{\typerec{j}{P}{\typeP} }}} \\
%
&=& \mathbf{abs} \circ {\sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r} }}{t[v]}{\typeP_j[\typerec{}{P}{\typeP}/\vec{P}]}}} \\
%
&=& \mathbf{abs} \circ \sem{\tjudge{s}{\Gamma'}{t}{\typeP_j[\typerec{}{P}{\typeP}/\vec{P}]}} \circ
(\mathbf{1}_\Gamma \circ \sem{v}^{n}) \quad \text{by induction} \\
%
&=& \sem{\tjudge{s}{\Gamma'}{\abs{t}}{\typerec{j}{P}{\typeP} }} \circ (\mathbf{1}_\Gamma \circ
\sem{v}^{n})
%
\end{array}\]
as required.




\subparagraph{Recursive Type Unfolding}
Suppose that $\tjudge{s}{\Gamma'}{\rep{t}}{\typeP_j[\typerec{}{P}{\typeP}/\vec{P}]}$ is derived from
$\tjudge{s}{\Gamma'}{t}{\typerec{j}{P}{\typeP} }$, then 
\[\begin{array}{rcl}
%
\multicolumn{3}{l}{\sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r} }}{(\rep{t})[v] =
\rep{(t[v])}}{\typeP_j[\typerec{}{P}{\typeP}/\vec{P}]}}} \\
%
&=& \mathbf{rep} \circ {\sem{\tjudge{s \cup
s_1}{\envcombine{\Gamma}{\envfresh{\Delta}{r} }}{t[v]}{\typerec{j}{P}{\typeP} }}} \\
%
&=& \mathbf{rep} \circ \sem{\tjudge{s}{\Gamma'}{t}{\typerec{j}{P}{\typeP} }} \circ
(\mathbf{1}_\Gamma \circ \sem{v}^{n}) \quad \text{by induction} \\
%
&=& \sem{\tjudge{s}{\Gamma'}{\rep{t}}{\typeP_j[\typerec{}{P}{\typeP}/\vec{P}]}}
\circ (\mathbf{1}_\Gamma \circ
\sem{v}^{n})
%
\end{array}\]
as required.
%
\end{proof}

\vfill\pagebreak

% vim: set filetype=tex foldlevel=0 cms=\%%s tw=0 nowrap:
